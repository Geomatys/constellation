/*
 *    Constellation - An open source and standard compliant SDI
 *    http://www.constellation-sdi.org
 *
 *    (C) 2012, Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 3 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */

package org.constellation.swing;

import java.awt.BorderLayout;
import org.constellation.admin.service.ConstellationServer;
import org.constellation.configuration.Instance;

/**
 * Edit a service.
 * 
 * @author Johann Sorel (geomatys)
 */
public class JServiceEditPane extends javax.swing.JPanel {

    private final ConstellationServer server;
    private final String serviceType;
    private final Instance serviceInstance;
    private final ServiceEditionPanel serviceEditionPanel;
    
    public JServiceEditPane(final ConstellationServer server, final String serviceType, final Instance serviceInstance) {
        this.server = server;
        this.serviceType = serviceType;
        this.serviceInstance = serviceInstance;
        Object configuration = server.services.getInstanceconfiguration(serviceType, serviceInstance.getName());
        initComponents();        
        guiName.setText(serviceInstance.getName());
        if ("WMS".equals(serviceType) || "WMTS".equals(serviceType) || "WCS".equals(serviceType) || "WFS".equals(serviceType)) {
            serviceEditionPanel =  new JServiceMapEditPane(server, serviceType, serviceInstance, configuration);
            guiInternalPane.add(BorderLayout.CENTER, serviceEditionPanel);
        } else {
            serviceEditionPanel = null;
        }
        
    }

    public String getServiceType() {
        return serviceType;
    }

    public Instance getServiceInstance() {
        return serviceInstance;
    }

    private void correctName(){
        int pos = guiName.getCaretPosition();
        guiName.setText(guiName.getText().replace(' ', '_'));
        guiName.setCaretPosition(pos);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        guiDelete = new javax.swing.JButton();
        guiSave = new javax.swing.JButton();
        guiName = new javax.swing.JTextField();
        guiInternalPane = new javax.swing.JPanel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/constellation/swing/Bundle"); // NOI18N
        jLabel1.setText(bundle.getString("name")); // NOI18N

        guiDelete.setText(bundle.getString("delete")); // NOI18N
        guiDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guiDeleteActionPerformed(evt);
            }
        });

        guiSave.setText(bundle.getString("save")); // NOI18N
        guiSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guiSaveActionPerformed(evt);
            }
        });

        guiName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guiNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                guiNameKeyTyped(evt);
            }
        });

        guiInternalPane.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guiInternalPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guiDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 466, Short.MAX_VALUE)
                        .addComponent(guiSave))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guiName)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {guiDelete, guiSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(guiName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guiInternalPane, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guiDelete)
                    .addComponent(guiSave))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void guiSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guiSaveActionPerformed
        correctName();
        server.services.renameInstance(serviceType, serviceInstance.getName(), guiName.getText());
        serviceInstance.setName(guiName.getText());
        server.services.configureInstance(serviceType, serviceInstance.getName(), serviceEditionPanel.getConfiguration());
        server.services.startInstance(serviceType, serviceInstance.getName());
        firePropertyChange("update", 0, 1);
    }//GEN-LAST:event_guiSaveActionPerformed

    private void guiDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guiDeleteActionPerformed
        server.services.deleteInstance(serviceType, serviceInstance.getName());        
        firePropertyChange("update", 0, 1);
    }//GEN-LAST:event_guiDeleteActionPerformed

    private void guiNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guiNameKeyTyped
        correctName();
    }//GEN-LAST:event_guiNameKeyTyped

    private void guiNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guiNameKeyPressed
        correctName();
    }//GEN-LAST:event_guiNameKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton guiDelete;
    private javax.swing.JPanel guiInternalPane;
    private javax.swing.JTextField guiName;
    private javax.swing.JButton guiSave;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables



}
