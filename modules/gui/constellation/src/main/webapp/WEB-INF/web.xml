<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" metadata-complete="true" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <display-name>constellation</display-name>

    <login-config>
        <auth-method>BASIC</auth-method>
    </login-config>
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    
    <!-- REST Servlet for constellation web service -->
    <servlet>
        <servlet-name>ServletAdaptor</servlet-name>
        <servlet-class>org.constellation.ws.rs.CstlServletContainer</servlet-class>
        <init-param>
          <param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
          <param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
        </init-param>
        <init-param>
          <param-name>com.sun.jersey.config.property.packages</param-name>
             <!-- To disable CSW            service remove packageName: org.constellation.metadata.ws.rs                             -->
             <!-- To enable  SOS            service add    packageName: org.constellation.sos.ws.rs                                  -->
             <!-- To enable  GeoDRM         service add    packageName: org.constellation.security.ws                                -->
             <!-- To enabme  Security for WMS       add    packageName: org.constellation.security.wms                               -->
             <!-- To disable configuration  service remove packageName: org.constellation.configuration.ws                           -->
             <!-- To disable new WMS        service remove packageName: org.constellation.map.ws.rs;org.constellation.ws.rs.provider -->
             <!-- To disable new WCS        service remove packageName: org.constellation.coverage.ws.rs                             -->
          <!--param-value>org.constellation.configuration.ws;org.constellation.metadata.ws.rs;org.constellation.map.ws.rs;org.constellation.ws.rs.provider;org.constellation.coverage.ws.rs</param-value-->
          <param-value>${constellation.services.packages}</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ServletAdaptor</servlet-name>
        <url-pattern>/WS/*</url-pattern>
    </servlet-mapping>
    
    <!-- here is a tag to use TOMCAT pooled connection datasource  -->

    <!--resource-ref>
        <description>postgreSQL Datasource example</description>
        <res-ref-name>jdbc/observation</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref-->

    <!-- SOAP servlet for constellation web service for Tomcat  
    
      In Glassfish: To enable SOAP service in glassfish remove the property 'metadata-complete="true"' in the web-app tag (at the top of this document)
      In Tomcat   : Enable each service by uncommenting the servlet block -->

    

    <!-- to enable the SOS service SOAP (in tomcat) uncomment the following servlet -->

    <!--listener>
        <listener-class>com.sun.xml.ws.transport.http.servlet.WSServletContextListener</listener-class>
    </listener>
    <servlet>
        <servlet-name>SOService</servlet-name>
        <servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>SOService</servlet-name>
        <url-pattern>/SOService</url-pattern>
    </servlet-mapping-->

    <!-- to enable the CSW service SOAP (in tomcat) uncomment the following servlet -->
    <!--listener>
        <listener-class>com.sun.xml.ws.transport.http.servlet.WSServletContextListener</listener-class>
    </listener>
    <servlet>
        <servlet-name>CSWService</servlet-name>
        <servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>CSWService</servlet-name>
        <url-pattern>/CSWService</url-pattern>
    </servlet-mapping-->

    
    <!--
        Security role name.
        - In the case of sun-based application server (like glassfish), this fields is mapped
          into the sun-web.xml file to the group name defined in the container.
        - For Tomcat, this role name is directly tested against the realm.
          The sun-web.xml is not used.
    -->
    <security-role>
        <role-name>cstladmin</role-name>
    </security-role>

    <!-- Secured all GET and POST requests done on the configuration webservice -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Constellation secured service</web-resource-name>
            <url-pattern>/WS/configuration</url-pattern>
            <url-pattern>/WS/admin/*</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description>User must be logged in as an administrator to use this service.</description>
            <role-name>cstladmin</role-name>
        </auth-constraint>
    </security-constraint>

</web-app>
