/**
 * This class is generated by jOOQ
 */
package org.constellation.database.api.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Data extends org.jooq.impl.TableImpl<org.constellation.database.api.jooq.tables.records.DataRecord> {

	private static final long serialVersionUID = -1118219947;

	/**
	 * The reference instance of <code>admin.data</code>
	 */
	public static final org.constellation.database.api.jooq.tables.Data DATA = new org.constellation.database.api.jooq.tables.Data();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.constellation.database.api.jooq.tables.records.DataRecord> getRecordType() {
		return org.constellation.database.api.jooq.tables.records.DataRecord.class;
	}

	/**
	 * The column <code>admin.data.id</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>admin.data.name</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false), this, "");

	/**
	 * The column <code>admin.data.namespace</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.String> NAMESPACE = createField("namespace", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

	/**
	 * The column <code>admin.data.provider</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Integer> PROVIDER = createField("provider", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>admin.data.type</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

	/**
	 * The column <code>admin.data.subtype</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.String> SUBTYPE = createField("subtype", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>admin.data.included</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Boolean> INCLUDED = createField("included", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>admin.data.sensorable</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Boolean> SENSORABLE = createField("sensorable", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>admin.data.date</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Long> DATE = createField("date", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>admin.data.owner</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Integer> OWNER = createField("owner", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>admin.data.metadata</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.String> METADATA = createField("metadata", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>admin.data.dataset_id</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Integer> DATASET_ID = createField("dataset_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>admin.data.feature_catalog</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.String> FEATURE_CATALOG = createField("feature_catalog", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>admin.data.stats_result</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.String> STATS_RESULT = createField("stats_result", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>admin.data.rendered</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Boolean> RENDERED = createField("rendered", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>admin.data.stats_state</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.String> STATS_STATE = createField("stats_state", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>admin.data.hidden</code>.
	 */
	public final org.jooq.TableField<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Boolean> HIDDEN = createField("hidden", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>admin.data</code> table reference
	 */
	public Data() {
		this("data", null);
	}

	/**
	 * Create an aliased <code>admin.data</code> table reference
	 */
	public Data(java.lang.String alias) {
		this(alias, org.constellation.database.api.jooq.tables.Data.DATA);
	}

	private Data(java.lang.String alias, org.jooq.Table<org.constellation.database.api.jooq.tables.records.DataRecord> aliased) {
		this(alias, aliased, null);
	}

	private Data(java.lang.String alias, org.jooq.Table<org.constellation.database.api.jooq.tables.records.DataRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.constellation.database.api.jooq.Admin.ADMIN, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.constellation.database.api.jooq.tables.records.DataRecord, java.lang.Integer> getIdentity() {
		return org.constellation.database.api.jooq.Keys.IDENTITY_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.constellation.database.api.jooq.tables.records.DataRecord> getPrimaryKey() {
		return org.constellation.database.api.jooq.Keys.DATA_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.constellation.database.api.jooq.tables.records.DataRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.constellation.database.api.jooq.tables.records.DataRecord>>asList(org.constellation.database.api.jooq.Keys.DATA_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.constellation.database.api.jooq.tables.records.DataRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.constellation.database.api.jooq.tables.records.DataRecord, ?>>asList(org.constellation.database.api.jooq.Keys.DATA__DATA_PROVIDER_FK, org.constellation.database.api.jooq.Keys.DATA__DATA_OWNER_FK, org.constellation.database.api.jooq.Keys.DATA__DATA_DATASET_ID_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.constellation.database.api.jooq.tables.Data as(java.lang.String alias) {
		return new org.constellation.database.api.jooq.tables.Data(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.constellation.database.api.jooq.tables.Data rename(java.lang.String name) {
		return new org.constellation.database.api.jooq.tables.Data(name, null);
	}
}
