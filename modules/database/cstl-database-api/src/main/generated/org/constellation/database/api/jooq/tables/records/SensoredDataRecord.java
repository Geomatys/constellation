/**
 * This class is generated by jOOQ
 */
package org.constellation.database.api.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SensoredDataRecord extends org.jooq.impl.UpdatableRecordImpl<org.constellation.database.api.jooq.tables.records.SensoredDataRecord> implements org.jooq.Record2<java.lang.Integer, java.lang.Integer> {

	private static final long serialVersionUID = -811626937;

	/**
	 * Setter for <code>admin.sensored_data.sensor</code>.
	 */
	public SensoredDataRecord setSensor(java.lang.Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>admin.sensored_data.sensor</code>.
	 */
	@javax.validation.constraints.NotNull
	public java.lang.Integer getSensor() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>admin.sensored_data.data</code>.
	 */
	public SensoredDataRecord setData(java.lang.Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>admin.sensored_data.data</code>.
	 */
	@javax.validation.constraints.NotNull
	public java.lang.Integer getData() {
		return (java.lang.Integer) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record2<java.lang.Integer, java.lang.Integer> key() {
		return (org.jooq.Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.Integer> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.constellation.database.api.jooq.tables.SensoredData.SENSORED_DATA.SENSOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.constellation.database.api.jooq.tables.SensoredData.SENSORED_DATA.DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getSensor();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SensoredDataRecord value1(java.lang.Integer value) {
		setSensor(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SensoredDataRecord value2(java.lang.Integer value) {
		setData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SensoredDataRecord values(java.lang.Integer value1, java.lang.Integer value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SensoredDataRecord
	 */
	public SensoredDataRecord() {
		super(org.constellation.database.api.jooq.tables.SensoredData.SENSORED_DATA);
	}

	/**
	 * Create a detached, initialised SensoredDataRecord
	 */
	public SensoredDataRecord(java.lang.Integer sensor, java.lang.Integer data) {
		super(org.constellation.database.api.jooq.tables.SensoredData.SENSORED_DATA);

		setValue(0, sensor);
		setValue(1, data);
	}
}
