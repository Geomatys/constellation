<?xml version="1.0" encoding="UTF-8"?>
<ctl:package xmlns="http://www.occamlab.com/ctl"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:ocp="http://www.occamlab.com/te/parsers"
 xmlns:tep="http://teamengine.sourceforge.net/parsers"
 xmlns:saxon="http://saxon.sf.net/" 
 xmlns:wfs="http://www.opengis.net/wfs" 
 xmlns:gml="http://www.opengis.net/gml" 
 xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
 xmlns:xlink="http://www.w3.org/1999/xlink">

    <ctl:test name="wfs:GetFeature.XLink-POST-XML">
      <ctl:param name="wfs.capabilities.doc"/>
      <ctl:assertion>
      An implementation that supports XLink handling in GetFeature requests 
      containing XML entities must satisfy all applicable assertions.
      </ctl:assertion>
      <ctl:code>
      
		<ctl:call-test name="wfs:GetFeature-traverseXlinkExpiry">
			<ctl:with-param name="CAPABILITIES" select="$wfs.capabilities.doc" />
		</ctl:call-test>
      
        <xsl:variable name="wfs.GetFeature.post.url">
		    <xsl:value-of select="$wfs.capabilities.doc//ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:DCP/ows:HTTP/ows:Post/@xlink:href"/>
		</xsl:variable>
        <ctl:message>Target endpoint is <xsl:value-of select="$wfs.GetFeature.post.url"/></ctl:message>
        
        <xsl:variable name="LocalTraverseXlinkScope" as="xsd:integer">
			<xsl:choose>
                <xsl:when test="$wfs.capabilities.doc//ows:OperationsMetadata/ows:Constraint[@name='LocalTraverseXLinkScope']">
                  <!-- global constraint -->
                  <xsl:variable name="xlink.depth" select="$wfs.capabilities.doc//ows:OperationsMetadata/ows:Constraint[@name='LocalTraverseXLinkScope']" />
                  <xsl:choose>
                    <xsl:when test="$xlink.depth/ows:Value = '*'">
					  <xsl:value-of select="xsd:integer(1024)"/>
				    </xsl:when>
                    <xsl:otherwise>
					  <xsl:value-of select="xsd:integer(max($xlink.depth/ows:Value))"/>
				    </xsl:otherwise>
                  </xsl:choose>
				</xsl:when>
                <xsl:when test="$wfs.capabilities.doc//ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:Constraint[@name='LocalTraverseXLinkScope']">
                  <!-- operation-specific constraint -->
                  <xsl:variable name="xlink.depth" select="$wfs.capabilities.doc//ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:Constraint[@name='LocalTraverseXLinkScope']" />
                  <xsl:choose>
                    <xsl:when test="$xlink.depth/ows:Value = '*'">
					  <xsl:value-of select="xsd:integer(1024)"/>
				    </xsl:when>
                    <xsl:otherwise>
					  <xsl:value-of select="xsd:integer(max($xlink.depth/ows:Value))"/>
				    </xsl:otherwise>
                  </xsl:choose>
				</xsl:when>
                <xsl:otherwise>
					<xsl:value-of select="xsd:integer(1024)"/>
				</xsl:otherwise>
			</xsl:choose>
        </xsl:variable>
        
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-1">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-2">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-3">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
		<ctl:call-test name="wfs:GetFeature.XLink-POST-XML-4">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>		
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-5">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-6">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-7">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
		<xsl:if test="not(boolean($wfs.capabilities.doc//ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:Constraint[@name='RemoteTraverseXLinkScope']/ows:Value))">
			<ctl:call-test name="wfs:GetFeature.XLink-POST-XML-8">
				<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
				<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
			</ctl:call-test>
		</xsl:if>
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-9">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-10">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetFeature.XLink-POST-XML-11">
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
			<ctl:with-param name="LocalTraverseXlinkScope" select="$LocalTraverseXlinkScope"/>
		</ctl:call-test>
		
      </ctl:code>
    </ctl:test>
    
    <ctl:test name="wfs:GetFeature.XLink-POST-XML-1">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>All of the following conditions must be true after successfully 
        resolving an XLink reference: (a) the correct target resource (referent) has been 
        inserted as a child of the link element; (b) the locator attribute (@xlink:href) has 
        been removed from the link element; (c) the locator attribute is included in the 
        text of a comment contained in the link element.</ctl:assertion>      
      <ctl:comment>XLinks must be resolved to the depth specified by the value of the @traverseXlinkDepth attribute.</ctl:comment>
      <ctl:link title="ATC: XLink resolution">docs/ats.html#XLinkResolution</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" 
    traverseXlinkDepth="1">
	<wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
		<ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
			<ogc:PropertyIsEqualTo>
				<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
				<ogc:Literal>name-f202</ogc:Literal>
			</ogc:PropertyIsEqualTo>
		</ogc:Filter>
	</wfs:Query>
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
			  <xsl:variable name="nFeatureMembers" select="count($response//sf:LinkedFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:LinkedFeature feature member in the response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>  			
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f202')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f202" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/sf:PrimitiveGeoFeature/gml:name = 'name-f092')">
				  <ctl:message>[FAILURE] XLink element link was not properly resolved; gml:name != "name-f092" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="sf:reference/@xlink:href">
				  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/comment())">
				  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
				  <ctl:fail />
				</xsl:if>
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetFeature.XLink-POST-XML-2">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>All of the following conditions must be true after successfully 
        resolving an XLink reference: (a) the correct target resource (referent) has been 
        inserted as a child of the link element; (b) the locator attribute (@xlink:href) has 
        been removed from the link element; (c) the locator attribute is included in the 
        text of a comment contained in the link element.</ctl:assertion>      
      <ctl:comment>No traverseXlinkDepth parameter should return a feature set with no XLinks resolved.</ctl:comment>
      <ctl:link title="ATC: XLink resolution">docs/ats.html#XLinkResolution</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" traverseXlinkDepth="0">
	<wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
		<ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
			<ogc:PropertyIsEqualTo>
				<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
				<ogc:Literal>name-f202</ogc:Literal>
			</ogc:PropertyIsEqualTo>
		</ogc:Filter>
	</wfs:Query>
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
			  <xsl:variable name="nFeatureMembers" select="count($response//sf:LinkedFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:LinkedFeature feature member in the response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>  			
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f202')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f202" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(count(sf:reference/*) = 0)">
				  <ctl:message>[FAILURE] XLink element was erroneously resolved (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>				
				<xsl:if test="not(sf:reference/@xlink:href)">
				  <ctl:message>[FAILURE] XLink locator attribute was erroneously removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

<ctl:test name="wfs:GetFeature.XLink-POST-XML-3">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>All of the following conditions must be true after successfully 
        resolving an XLink reference: (a) the correct target resource (referent) has been 
        inserted as a child of the link element; (b) the locator attribute (@xlink:href) has 
        been removed from the link element; (c) the locator attribute is included in the 
        text of a comment contained in the link element.</ctl:assertion>      
      <ctl:comment>XLinks must NOT be resolved for GMLSF level 0 or 1 as the only 
      element to contain XLink values does not allow any content (gml:ReferenceType).</ctl:comment>
     <ctl:link title="ATC: XLink resolution">docs/ats.html#XLinkResolution</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" 
    traverseXlinkDepth="1">
	<wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:PrimitiveGeoFeature">
		<ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
			<ogc:PropertyIsEqualTo>
				<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
				<ogc:Literal>name-f092</ogc:Literal>
			</ogc:PropertyIsEqualTo>
		</ogc:Filter>
	</wfs:Query>	
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF1/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
              <xsl:variable name="nFeatureMembers" select="count($response//sf:PrimitiveGeoFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:PrimitiveGeoFeature feature member in the response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>  			
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f092')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f092" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="boolean(sf:relatedFeature/@xlink:href)">
				  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>				
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetFeature.XLink-POST-XML-4">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>A local XLink reference is processed when found; otherwise 
        an exception must be reported.</ctl:assertion>
      <ctl:comment>Confirm that an exception is generated with the appropriate code (invalid XLink fid - will not be found).</ctl:comment>
      <ctl:link title="ATC: XLink resolution">docs/ats.html#XLinkResolution</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS"
  traverseXlinkDepth="*">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f209</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>  
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.OWS/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
			<xsl:otherwise>
			  <ctl:call-test name="ctl:SchematronValidatingParser">
				<ctl:with-param name="doc" select="$response" />
				<ctl:with-param name="schema">sch/ows/1.0.0/ExceptionReport.sch</ctl:with-param>
				<ctl:with-param name="phase">NoApplicableCodePhase</ctl:with-param>
			  </ctl:call-test>
		    </xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetFeature.XLink-POST-XML-5">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>XLink references must be resolved to a depth corresponding to 
        one of the following cases: (a) the requested depth; (b) the maximum supported 
        depth, if this is less than the requested depth</ctl:assertion>      
      <ctl:comment>XLinks must be resolved to the depth specified by the value of the @traverseXlinkDepth attribute.</ctl:comment>
      <ctl:link title="ATC: XLink resolution - Depth">docs/ats.html#XLinkResolution-LinkDepth</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS"
  traverseXlinkDepth="1">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f206</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>  
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
              <xsl:variable name="nFeatureMembers" select="count($response//sf:LinkedFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:LinkedFeature feature member in the response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>  			
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f206')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f206" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/sf:LinkedFeature/gml:name = 'name-f207')">
				  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "name-f207", was not found (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(count(sf:reference/sf:LinkedFeature/sf:reference/*) = 0)">
				  <ctl:message>[FAILURE] XLink element was erroneously resolved at depth = 2 (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>					
				<xsl:if test="sf:reference/@xlink:href">
				  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/comment())">
				  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
				  <ctl:fail />
				</xsl:if>
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetFeature.XLink-POST-XML-6">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>XLink references must be resolved to a depth corresponding to 
        one of the following cases: (a) the requested depth; (b) the maximum supported 
        depth, if this is less than the requested depth</ctl:assertion>      
      <ctl:comment>XLinks must be resolved to the depth specified by the value of the @traverseXlinkDepth attribute.</ctl:comment>
      <ctl:link title="ATC: XLink resolution - Depth">docs/ats.html#XLinkResolution-LinkDepth</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS"
  traverseXlinkDepth="2">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f206</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>  
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
              <xsl:variable name="nFeatureMembers" select="count($response//sf:LinkedFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:LinkedFeature feature member in the response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f206')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f206" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/sf:LinkedFeature/gml:name = 'name-f207')">
				  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "name-f207", was not found (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>				
				<xsl:if test="sf:reference/@xlink:href">
				  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/comment())">
				  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="xsd:integer($LocalTraverseXlinkScope) gt 1">
					<xsl:if test="not(sf:reference/sf:LinkedFeature/sf:reference/sf:LinkedFeature/gml:name = 'name-f210')">
					  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "name-f210", was not found (where feature id = <xsl:value-of select="./sf:reference/sf:LinkedFeature/@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="not(count(sf:reference/sf:LinkedFeature/sf:reference/sf:LinkedFeature/sf:reference/*) = 0)">
					  <ctl:message>[FAILURE] XLink element was erroneously resolved at depth = 3 (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="sf:reference/sf:LinkedFeature/sf:reference/@xlink:href">
					  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./sf:reference/sf:LinkedFeature/@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="not(sf:reference/sf:LinkedFeature/sf:reference/comment())">
					  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
					  <ctl:fail />
					</xsl:if>
				</xsl:if>				            
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetFeature.XLink-POST-XML-7">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>XLink references must be resolved to a depth corresponding to 
        one of the following cases: (a) the requested depth; (b) the maximum supported 
        depth, if this is less than the requested depth</ctl:assertion>      
      <ctl:comment>XLinks must be resolved to the depth specified by the value of the @traverseXlinkDepth attribute.</ctl:comment>
      <ctl:link title="ATC: XLink resolution - Depth">docs/ats.html#XLinkResolution-LinkDepth</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS"
  traverseXlinkDepth="*">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f206</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>  
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
              <xsl:variable name="nFeatureMembers" select="count($response//sf:LinkedFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:LinkedFeature feature member in the response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f206')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f206" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/sf:LinkedFeature/gml:name = 'name-f207')">
				  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "name-f207", was not found (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>				
				<xsl:if test="sf:reference/@xlink:href">
				  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/comment())">
				  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="xsd:integer($LocalTraverseXlinkScope) gt 2">
					<xsl:if test="not(sf:reference/sf:LinkedFeature/sf:reference/sf:LinkedFeature/gml:name = 'name-f210')">
					  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "name-f210", was not found (where feature id = <xsl:value-of select="./sf:reference/sf:LinkedFeature/@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="not(count(sf:reference/sf:LinkedFeature/sf:reference/sf:LinkedFeature/sf:reference/*) = 0)">
					  <ctl:message>[FAILURE] XLink element was erroneously resolved at depth = 3 (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="sf:reference/sf:LinkedFeature/sf:reference/@xlink:href">
					  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./sf:reference/sf:LinkedFeature/@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="not(sf:reference/sf:LinkedFeature/sf:reference/comment())">
					  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
					  <ctl:fail />
					</xsl:if>
				</xsl:if>				            
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetFeature.XLink-POST-XML-8">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>An XLink reference is processed only if its domain (as indicated 
        by the authority component of the @xlink:href value) is supported; otherwise 
        an exception must be reported. The capabilities document must indicate 
        whether local and/or remote domains are supported using the 
        LocalTraverseXlinkScope and RemoteTraverseXlinkScope constraints.</ctl:assertion>
      <ctl:comment>Confirm that an exception is generated with the appropriate code (unsupported remote XLink).</ctl:comment>
      <ctl:link title="ATC: XLink resolution - Domain">docs/ats.html#XLinkResolution-Domain</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS"
  traverseXlinkDepth="*">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f208</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>  
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.OWS/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
			<xsl:otherwise>
			  <ctl:call-test name="ctl:SchematronValidatingParser">
				<ctl:with-param name="doc" select="$response" />
				<ctl:with-param name="schema">sch/ows/1.0.0/ExceptionReport.sch</ctl:with-param>
				<ctl:with-param name="phase">NoApplicableCodePhase</ctl:with-param>
			  </ctl:call-test>
		    </xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetFeature.XLink-POST-XML-9">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>All XLink elements in a GetFeature response must be resolved 
      according to the value of the traverseXlinkDepth request parameter.</ctl:assertion>      
      <ctl:comment>XLinks must be resolved to the depth specified by the value of the @traverseXlinkDepth attribute (for all Xlink properties).</ctl:comment>
      <ctl:link title="ATC: GetFeature - Non-selective XLink resolution">docs/ats.html#GetFeature-NonSelectiveXLinkResolution</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" 
  traverseXlinkDepth="1">
	<wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
		<ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
			<ogc:PropertyIsEqualTo>
				<ogc:PropertyName>gml:name</ogc:PropertyName>
				<ogc:Literal>name-f204</ogc:Literal>
			</ogc:PropertyIsEqualTo>
		</ogc:Filter>
	</wfs:Query>
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
			  <xsl:variable name="nFeatureMembers" select="count($response//sf:LinkedFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:LinkedFeature feature member in the response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f204')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f204" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/sf:LinkedFeature/gml:name = 'name-f201')">
				  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "name-f201", was not found (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>		
				<xsl:if test="not(sf:extent/gml:MultiPoint/gml:pointMember/gml:Point/gml:description = 'description-g003')">
				  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:description = "description-g003", was not found (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(count(sf:extent/gml:MultiPoint/gml:pointMember/gml:Point) = 2)">
				  <ctl:message>[FAILURE] Expected resolved XLink element was not found, expected 2 gml:Point elements (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetFeature.XLink-POST-XML-10">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>An XLink element (feature property) specified by the value of the 
        &lt;wfs:XlinkPropertyName&gt; element must be processed according to the 
        values of the traverseXlinkDepth and traverseXlinkExpiry parameters specified 
        either (1) for this feature property, or (2) globally for the request as a whole.</ctl:assertion>      
      <ctl:comment>XLinks must be resolved to the depth specified by the value of the @traverseXlinkDepth attribute (specify a given Xlink property, local depth).</ctl:comment>
      <ctl:link title="ATC: GetFeature - Selective XLink resolution">docs/ats.html#GetFeature-SelectiveXLinkResolution</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" traverseXlinkDepth="0">
	<wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
	  <wfs:PropertyName>gml:name</wfs:PropertyName>
		<wfs:XlinkPropertyName traverseXlinkDepth="1">sf:extent</wfs:XlinkPropertyName>
		<ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
			<ogc:PropertyIsEqualTo>
				<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
				<ogc:Literal>name-f205</ogc:Literal>
			</ogc:PropertyIsEqualTo>
		</ogc:Filter>
	</wfs:Query>
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
              <xsl:variable name="nFeatureMembers" select="count($response//sf:LinkedFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:LinkedFeature feature member in the response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f205')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f205" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(count(sf:reference/*) = 0)">
				  <ctl:message>[FAILURE] XLink element was erroneously resolved (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>	
				<xsl:if test="not(sf:reference/@xlink:href)">
				  <ctl:message>[FAILURE] XLink locator attribute was erroneously removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:extent/gml:Polygon/gml:name = 'MU1')">
				  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "MU1", was not found (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>				
				<xsl:if test="sf:extent/@xlink:href">
				  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:extent/comment())">
				  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
				  <ctl:fail />
				</xsl:if>
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>
	
  <ctl:test name="wfs:GetFeature.XLink-POST-XML-11">
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:param name="LocalTraverseXlinkScope"/>
      <ctl:assertion>An XLink element (feature property) specified by the value of the 
        &lt;wfs:XlinkPropertyName&gt; element must be processed according to the 
        values of the traverseXlinkDepth and traverseXlinkExpiry parameters specified 
        either (1) for this feature property, or (2) globally for the request as a whole.</ctl:assertion>      
      <ctl:comment>XLinks must be resolved to the depth specified by the value of the @traverseXlinkDepth attribute (specify a given Xlink property, local depth ovverides global depth).</ctl:comment>
      <ctl:link title="ATC: GetFeature - Selective XLink resolution">docs/ats.html#GetFeature-SelectiveXLinkResolution</ctl:link>
	  <ctl:code>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS"
  traverseXlinkDepth="1">
	<wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
	  <wfs:PropertyName>gml:name</wfs:PropertyName>
		<wfs:XlinkPropertyName traverseXlinkDepth="2">sf:reference</wfs:XlinkPropertyName>
		<ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
			<ogc:PropertyIsEqualTo>
				<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
				<ogc:Literal>name-f210</ogc:Literal>
			</ogc:PropertyIsEqualTo>
		</ogc:Filter>
	</wfs:Query>
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
			  <xsl:variable name="nFeatureMembers" select="count($response//sf:LinkedFeature)" />
			  <xsl:if test="$nFeatureMembers = 0">
				<ctl:message>[FAILURE] Expected at least one sf:LinkedFeature feature in response (<xsl:value-of select="$nFeatureMembers"/> included)</ctl:message>
				<ctl:fail />
			  </xsl:if>
			  <!-- construct sequence containing all feature nodes -->
			  <xsl:for-each select="$response//gml:featureMember/* | $response//gml:featureMembers/*">
				<xsl:if test="not(gml:name = 'name-f210')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f210" (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/sf:LinkedFeature/gml:name = 'name-f206')">
				  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "name-f206", was not found (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>			
				<xsl:if test="sf:reference/@xlink:href">
				  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="not(sf:reference/comment())">
				  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
				  <ctl:fail />
				</xsl:if>
				<xsl:if test="xsd:integer($LocalTraverseXlinkScope) gt 2">
					<xsl:if test="not(sf:reference/sf:LinkedFeature/sf:reference/sf:LinkedFeature/gml:name = 'name-f207')">
					  <ctl:message>[FAILURE] Expected resolved XLink element, with gml:name = "name-f207", was not found (where feature id = <xsl:value-of select="./sf:reference/sf:LinkedFeature/@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="not(count(sf:reference/sf:LinkedFeature/sf:reference/sf:LinkedFeature/sf:reference/*) = 0)">
					  <ctl:message>[FAILURE] XLink element was erroneously resolved at depth = 3 (where feature id = <xsl:value-of select="./@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="sf:reference/sf:LinkedFeature/sf:reference/@xlink:href">
					  <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where feature id = <xsl:value-of select="./sf:reference/sf:LinkedFeature/@gml:id"/>)</ctl:message>
					  <ctl:fail />
					</xsl:if>
					<xsl:if test="not(sf:reference/sf:LinkedFeature/sf:reference/comment())">
					  <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
					  <ctl:fail />
					</xsl:if>
				</xsl:if>
			  </xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>	

	<ctl:test name="wfs:GetFeature-traverseXlinkExpiry">
		<ctl:param name="CAPABILITIES" />
		<ctl:assertion>When a GetFeature request with XLink elements is not resolved in less time than the traverseXlinkExpiry, an exception is returned.</ctl:assertion>
		<ctl:comment>use expiry=0 to ensure failure</ctl:comment>				
      	<ctl:link>OGC 04-094, 11.2.1, p.56</ctl:link>
		<ctl:code>
			<xsl:choose>
	            <xsl:when test="not($CAPABILITIES/wfs:FeatureTypeList/wfs:FeatureType[wfs:Name='sf:LinkedFeature'])">
					<ctl:message>sf:LinkedFeature does not exist</ctl:message>		        	
	            </xsl:when>
	            <xsl:otherwise>
					<xsl:variable name="RESPONSE">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$CAPABILITIES/ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:DCP/ows:HTTP/ows:Get/@xlink:href"/>			
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="request">GetFeature</ctl:param>					
							<ctl:param name="service">WFS</ctl:param>
							<ctl:param name="version">1.1.0</ctl:param>
							<param name="typename">
								<xsl:value-of select="wfs:encode($CAPABILITIES/wfs:FeatureTypeList/wfs:FeatureType[wfs:Name='sf:LinkedFeature']/wfs:Name)"/>			
							</param>					
							<ctl:param name="traverseXlinkExpiry">0</ctl:param>
				            <parsers:HTTPParser>
				               <parsers:parse>
				                  <parsers:HTTPParser/>
				               </parsers:parse>
				            </parsers:HTTPParser>
						</ctl:request>
					</xsl:variable>	
					<xsl:if test="not($RESPONSE//ows:Exception/*)">
						<ctl:fail/>
					</xsl:if>
		
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	
</ctl:package>
