<?xml version="1.0" encoding="UTF-8"?>
<ctl:package
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:p="http://teamengine.sourceforge.net/parsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:wfs="http://www.opengis.net/wfs"
 xmlns:gml="http://www.opengis.net/gml"
 xmlns:sf="http://cite.opengeospatial.org/gmlsf"
 xmlns:ows="http://www.opengis.net/ows"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xi="http://www.w3.org/2001/XInclude">

    <ctl:test name="wfs:run-Transaction-XML-gmlsf1">
      <ctl:param name="wfs.Transaction.post.url"/>
      <ctl:param name="wfs.GetFeature.get.url"/>
      <ctl:assertion>Run test group for Transaction requests (XML) at GMLSF Level 1.</ctl:assertion>
      <ctl:code>
        <ctl:call-test name="wfs:wfs-1.1.0-Transaction-tc20.1">
          <ctl:with-param name="wfs.Transaction.post.url" select="$wfs.Transaction.post.url"/>
          <ctl:with-param name="wfs.GetFeature.get.url" select="$wfs.GetFeature.get.url"/>
        </ctl:call-test>
        <ctl:call-test name="wfs:wfs-1.1.0-Transaction-tc21.1">
          <ctl:with-param name="wfs.Transaction.post.url" select="$wfs.Transaction.post.url"/>
          <ctl:with-param name="wfs.GetFeature.get.url" select="$wfs.GetFeature.get.url"/>
        </ctl:call-test>
      </ctl:code>
    </ctl:test>

    <ctl:test name="wfs:wfs-1.1.0-Transaction-tc20.1">
      <ctl:param name="wfs.Transaction.post.url"/>
      <ctl:param name="wfs.GetFeature.get.url"/>
      <ctl:assertion>
      The response to a transaction request containing an insert statement must
      include a list of identifiers for all successfully inserted features.
      </ctl:assertion>
      <ctl:comment>Pass if all of the following conditions are true: (1) the response
      is schema valid; (2) TransactionSummary/totalInserted = 1; and (3) the
      wfs:InsertResults element has one child wfs:Feature element.</ctl:comment>
      <ctl:code>
			<xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.Transaction.post.url"/>
					</ctl:url>
                    <ctl:method>POST</ctl:method>
					<ctl:body>
						<xi:include href="./wfs-1.1.0-Transaction-tc20.1.body.xml"/>
					</ctl:body>
					<p:XMLValidatingParser.GMLSF1/>
				</ctl:request>
			</xsl:variable>

            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="totalInserted" select="$response//wfs:totalInserted" />
                <xsl:if test="$totalInserted != 1">
                  <ctl:message>FAILURE: Expected totalInserted = 1 (reported total is <xsl:value-of select="$totalInserted"/>)</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <ctl:call-test name="ctl:SchematronValidatingParser">
		            <ctl:with-param name="doc" select="$response" />
		            <ctl:with-param name="schema">sch/wfs/1.1.0/Transaction.sch</ctl:with-param>
		            <ctl:with-param name="phase">DefaultPhase</ctl:with-param>
	            </ctl:call-test>
                <ctl:call-test name="wfs:GetFeatureById-KVP">
                  <ctl:with-param name="wfs.GetFeature.get.url" select="$wfs.GetFeature.get.url"/>
                  <ctl:with-param name="id" select="$response//wfs:InsertResults/wfs:Feature[1]/ogc:FeatureId/@fid"/>
                  <ctl:with-param name="empty.response" select="'false'" />
                </ctl:call-test>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>

    <ctl:test name="wfs:wfs-1.1.0-Transaction-tc21.1">
      <ctl:param name="wfs.Transaction.post.url"/>
      <ctl:param name="wfs.GetFeature.get.url"/>
      <ctl:assertion>
      The response to a transaction request containing an insert statement must
      include a list of identifiers for all successfully inserted features.
      Feature references must be preserved.
      </ctl:assertion>
      <ctl:comment>
      Pass if all of the following conditions are true: (1) all responses are schema
      valid; (2) two features are successfully inserted; and (3) feature references
      are preserved (i.e., can be resolved to obtain the target feature instance).
      </ctl:comment>
      <ctl:code>
			<xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.Transaction.post.url"/>
					</ctl:url>
                    <ctl:method>POST</ctl:method>
					<ctl:body>
						<xi:include href="./wfs-1.1.0-Transaction-tc21.1.body.xml"/>
					</ctl:body>
					<p:XMLValidatingParser.GMLSF1/>
				</ctl:request>
			</xsl:variable>

            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="totalInserted" select="$response//wfs:totalInserted" />
                <xsl:if test="$totalInserted != 2">
                  <ctl:message>FAILURE: Expected totalInserted = 2 (reported total is <xsl:value-of select="$totalInserted"/>)</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <ctl:call-test name="ctl:SchematronValidatingParser">
		            <ctl:with-param name="doc" select="$response" />
		            <ctl:with-param name="schema">sch/wfs/1.1.0/Transaction.sch</ctl:with-param>
		            <ctl:with-param name="phase">DefaultPhase</ctl:with-param>
	            </ctl:call-test>
                <!-- Retrieve second inserted feature -->
                <xsl:variable name="response2">
				  <ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.get.url"/>
					</ctl:url>
					<ctl:method>GET</ctl:method>
					<ctl:param name="service">WFS</ctl:param>
                    <ctl:param name="version">1.1.0</ctl:param>
					<ctl:param name="request">GetFeature</ctl:param>
                    <ctl:param name="featureid"><xsl:value-of select="$response//wfs:InsertResults/wfs:Feature[2]/ogc:FeatureId/@fid"/></ctl:param>
                    <p:XMLValidatingParser.GMLSF1/>
				  </ctl:request>
	            </xsl:variable>
                <!-- Retrieve referenced feature -->
                <xsl:variable name="featureRef">
                  <xsl:value-of select="substring-after($response2//sf:ComplexGeoFeature[1]/sf:reference/@xlink:href, '#')" />
		</xsl:variable>
                <xsl:variable name="response3">
				  <ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetFeature.get.url"/>
					</ctl:url>
					<ctl:method>GET</ctl:method>
					<ctl:param name="service">WFS</ctl:param>
                    <ctl:param name="version">1.1.0</ctl:param>
					<ctl:param name="request">GetFeature</ctl:param>
                    <ctl:param name="featureid"><xsl:value-of select="$featureRef"/></ctl:param>
                    <p:XMLValidatingParser.GMLSF1/>
				  </ctl:request>
	            </xsl:variable>
                <xsl:if test="count($response3//sf:ComplexGeoFeature) != 1">
                  <ctl:message>FAILURE: Unable to resolve feature reference (<xsl:value-of select="$featureRef"/>)</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
</ctl:package>
