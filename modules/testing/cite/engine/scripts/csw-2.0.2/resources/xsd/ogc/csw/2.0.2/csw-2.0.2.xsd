<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema id="csw-2.0.2"
   targetNamespace="http://www.opengis.net/cat/csw/2.0.2"
   xmlns:csw="http://www.opengis.net/cat/csw/2.0.2"
   xmlns:ogc="http://www.opengis.net/ogc" 
   xmlns:ows="http://www.opengis.net/ows" 
   xmlns:dc="http://purl.org/dc/elements/1.1/" 
   xmlns:dct="http://purl.org/dc/terms/" 
   xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
   elementFormDefault="qualified"
   version="2.0.2">

   <xsd:annotation>
      <xsd:documentation xml:lang="en">
      This schema defines the request and response messages for the CSW 
      operations specified in Clause 10 of OGC-07-006.
      </xsd:documentation>
   </xsd:annotation>
   
  <xsd:import namespace="http://purl.org/dc/terms/" 
    schemaLocation="./rec-dcterms.xsd" />
  <xsd:import namespace="http://purl.org/dc/elements/1.1/" 
    schemaLocation="./rec-dcmes.xsd" />
  <xsd:import namespace="http://www.opengis.net/ows" 
    schemaLocation="../../ows/1.0.0/ows-1.0.0.xsd" />
  <xsd:import namespace="http://www.opengis.net/ogc"
     schemaLocation="../../filter/1.1.0/filter-1.1.0.xsd"/>

   <xsd:element name="AbstractRecord" id="AbstractRecord"
                type="csw:AbstractRecordType" abstract="true" />
   <xsd:complexType name="AbstractRecordType" id="AbstractRecordType"
                    abstract="true"/>

   <xsd:element name="DCMIRecord" type="csw:DCMIRecordType"
                substitutionGroup="csw:AbstractRecord"/>
   <xsd:complexType name="DCMIRecordType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            This type encapsulates all of the standard DCMI metadata terms,
            including the Dublin Core refinements; these terms may be mapped
            to the profile-specific information model.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:AbstractRecordType">
            <xsd:sequence>
               <xsd:group ref="dct:DCMI-terms"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

   <xsd:element name="BriefRecord" type="csw:BriefRecordType"
                substitutionGroup="csw:AbstractRecord"/>
   <xsd:complexType name="BriefRecordType" final="#all">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            This type defines a brief representation of the common record
            format.  It extends AbstractRecordType to include only the
             dc:identifier and dc:type properties.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:AbstractRecordType">
            <xsd:sequence>
               <xsd:element ref="dc:identifier"
                            minOccurs="1" maxOccurs="unbounded"/>
               <xsd:element ref="dc:title"
                            minOccurs="1" maxOccurs="unbounded"/>
               <xsd:element ref="dc:type"
                            minOccurs="0"/>
               <xsd:element ref="ows:BoundingBox"
                            minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

   <xsd:element name="SummaryRecord" type="csw:SummaryRecordType"
                substitutionGroup="csw:AbstractRecord"/>
   <xsd:complexType name="SummaryRecordType" final="#all">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            This type defines a summary representation of the common record
            format.  It extends AbstractRecordType to include the core
            properties.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:AbstractRecordType">
            <xsd:sequence>
               <xsd:element ref="dc:identifier"
                            minOccurs="1" maxOccurs="unbounded"/>
               <xsd:element ref="dc:title"
                            minOccurs="1" maxOccurs="unbounded"/>
               <xsd:element ref="dc:type"
                            minOccurs="0"/>
               <xsd:element ref="dc:subject"
                            minOccurs="0" maxOccurs="unbounded"/>
               <xsd:element ref="dc:format"
                            minOccurs="0" maxOccurs="unbounded"/>
               <xsd:element ref="dc:relation"
                            minOccurs="0" maxOccurs="unbounded"/>
               <xsd:element ref="dct:modified"
                            minOccurs="0" maxOccurs="unbounded"/>
               <xsd:element ref="dct:abstract"
                            minOccurs="0" maxOccurs="unbounded"/>
               <xsd:element ref="dct:spatial"
                            minOccurs="0" maxOccurs="unbounded"/>
               <xsd:element ref="ows:BoundingBox"
                            minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

   <xsd:element name="Record" type="csw:RecordType"
                substitutionGroup="csw:AbstractRecord"/>
   <xsd:complexType name="RecordType" final="#all">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            This type extends DCMIRecordType to add ows:BoundingBox;
            it may be used to specify a spatial envelope for the
            catalogued resource.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:DCMIRecordType">
            <xsd:sequence>
               <xsd:element name="AnyText" type="csw:EmptyType"
                            minOccurs="0" maxOccurs="unbounded"/>
               <xsd:element ref="ows:BoundingBox"
                            minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="EmptyType" />
   
   <xsd:complexType name="RequestBaseType" id="RequestBaseType" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            Base type for all request messages except GetCapabilities. The 
            attributes identify the relevant service type and version.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:attribute name="service" type="ows:ServiceType"
                     use="required" fixed="CSW"/>
      <xsd:attribute name="version" type="ows:VersionType"
                     use="required" fixed="2.0.2"/>
   </xsd:complexType>

   <xsd:element name="GetCapabilities" id="GetCapabilities"
                type="csw:GetCapabilitiesType"/>
   <xsd:complexType name="GetCapabilitiesType" id="GetCapabilitiesType">
      <xsd:annotation>
         <xsd:documentation>
            Request for a description of service capabilities. See OGC 05-008 
            for more information.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="ows:GetCapabilitiesType">
            <xsd:attribute name="service" type="ows:ServiceType" use="optional"
               default="http://www.opengis.net/cat/csw"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:element name="Capabilities" id="Capabilities"
      type="csw:CapabilitiesType"/>
   <xsd:complexType name="CapabilitiesType" id="CapabilitiesType">
      <xsd:annotation>
         <xsd:documentation>This type extends ows:CapabilitiesBaseType defined in OGC-05-008 
         to include information about supported OGC filter components. A 
         profile may extend this type to describe additional capabilities.</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="ows:CapabilitiesBaseType">
            <xsd:sequence>
               <xsd:element ref="ogc:Filter_Capabilities"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:element name="DescribeRecord" type="csw:DescribeRecordType"
      id="DescribeRecord"/>
   <xsd:complexType name="DescribeRecordType" id="DescribeRecordType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">This request allows a user to discover elements of the
         information model supported by the catalogue. If no TypeName 
         elements are included, then all of the schemas for the 
         information model must be returned.
      
         schemaLanguage - preferred schema language
                          (W3C XML Schema by default)
         outputFormat - preferred output format (application/xml by default)</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:RequestBaseType">
            <xsd:sequence>
               <xsd:element name="TypeName" type="xsd:QName" minOccurs="0"
                  maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:attribute name="outputFormat" type="xsd:string" use="optional"
               default="application/xml"/>
            <xsd:attribute name="schemaLanguage" type="xsd:anyURI"
               use="optional" default="http://www.w3.org/XML/Schema"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:element name="DescribeRecordResponse" id="DescribeRecordResponse"
      type="csw:DescribeRecordResponseType"/>
   <xsd:complexType name="DescribeRecordResponseType"
      id="DescribeRecordResponseType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">The response contains a list of matching schema components
         in the requested schema language.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="SchemaComponent" type="csw:SchemaComponentType"
            minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="SchemaComponentType" mixed="true"
      id="SchemaComponentType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">A schema component includes a schema fragment (type
         definition) or an entire schema from some target namespace;
         the schema language is identified by URI. If the component
         is a schema fragment its parent MUST be referenced (parentSchema).</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:any namespace="##any" processContents="lax"/>
      </xsd:sequence>
      <xsd:attribute name="targetNamespace" type="xsd:anyURI" use="required"/>
      <xsd:attribute name="parentSchema" type="xsd:anyURI" use="optional"/>
      <xsd:attribute name="schemaLanguage" type="xsd:anyURI" use="required"/>
   </xsd:complexType>
   <xsd:element name="GetRecords" type="csw:GetRecordsType" id="GetRecords"/>
   <xsd:complexType name="GetRecordsType" id="GetRecordsType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
         The principal means of searching the catalogue. The matching 
         catalogue entries may be included with the response. The client 
         may assign a requestId (absolute URI). A distributed search is 
         performed if the DistributedSearch element is present and the 
         catalogue is a member of a federation. Profiles may allow 
         alternative query expressions.</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:RequestBaseType">
            <xsd:sequence>
               <xsd:element name="DistributedSearch"
                  type="csw:DistributedSearchType" minOccurs="0"/>
               <xsd:element name="ResponseHandler" type="xsd:anyURI"
                  minOccurs="0" maxOccurs="unbounded"/>
               <xsd:choice>
                  <xsd:element ref="csw:AbstractQuery"/>
                  <xsd:any processContents="strict" namespace="##other"/>
               </xsd:choice>
            </xsd:sequence>
            <xsd:attribute name="requestId" type="xsd:anyURI" use="optional"/>
            <xsd:attribute name="resultType" type="csw:ResultType"
               use="optional" default="hits"/>
            <xsd:attributeGroup ref="csw:BasicRetrievalOptions"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:attributeGroup name="BasicRetrievalOptions" id="BasicRetrievalOptions">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">Various attributes that specify basic retrieval options:

            outputFormat   - the media type of the response message
            outputSchema   - the preferred schema for records in the result set
            startPosition  - requests a slice of the result set, starting
                             at this position
            maxRecords     - the maximum number of records to return. No
                             records are  returned if maxRecords=0.</xsd:documentation>
      </xsd:annotation>
      <xsd:attribute name="outputFormat" type="xsd:string" use="optional"
         default="application/xml"/>
      <xsd:attribute name="outputSchema" type="xsd:anyURI" use="optional"/>
      <xsd:attribute name="startPosition" type="xsd:positiveInteger"
         use="optional" default="1"/>
      <xsd:attribute name="maxRecords" type="xsd:nonNegativeInteger"
         use="optional" default="10"/>
   </xsd:attributeGroup>
   <xsd:simpleType name="ResultType" id="ResultType">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="results">
            <xsd:annotation>
               <xsd:documentation>Include results in the response.</xsd:documentation>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="hits">
            <xsd:annotation>
               <xsd:documentation>Provide a result set summary, but no results.</xsd:documentation>
            </xsd:annotation>
         </xsd:enumeration>
         <xsd:enumeration value="validate">
            <xsd:annotation>
               <xsd:documentation>Validate the request and return an Acknowledgement message if it 
	      is valid. Continue processing the request asynchronously.</xsd:documentation>
            </xsd:annotation>
         </xsd:enumeration>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="DistributedSearchType" id="DistributedSearchType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">Governs the behaviour of a distributed search.
         hopCount     - the maximum number of message hops before
                        the search is terminated. Each catalogue node 
                        decrements this value when the request is received, 
                        and must not forward the request if hopCount=0.</xsd:documentation>
      </xsd:annotation>
      <xsd:attribute name="hopCount" type="xsd:positiveInteger" use="optional"
         default="2"/>
   </xsd:complexType>
   <xsd:element name="AbstractQuery" type="csw:AbstractQueryType"
      id="AbstractQuery" abstract="true"/>
   <xsd:complexType name="AbstractQueryType" id="AbstractQueryType"
      abstract="true"/>
   <xsd:element name="Query" type="csw:QueryType" id="Query"
      substitutionGroup="csw:AbstractQuery"/>
   <xsd:complexType name="QueryType" id="QueryType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">Specifies a query to execute against instances of one or
         more object types. A set of ElementName elements may be included 
         to specify an adhoc view of the csw:Record instances in the result 
         set. Otherwise, use ElementSetName to specify a predefined view. 
         The Constraint element contains a query filter expressed in a 
         supported query language. A sorting criterion that specifies a 
         property to sort by may be included.

         typeNames - a list of object types to query.</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:AbstractQueryType">
            <xsd:sequence>
               <xsd:choice>
                  <xsd:element ref="csw:ElementSetName"/>
                  <xsd:element name="ElementName"
                               type="xsd:QName"
                               minOccurs="1" maxOccurs="unbounded"/>
               </xsd:choice>
               <xsd:element ref="csw:Constraint" minOccurs="0" maxOccurs="1"/>
               <xsd:element ref="ogc:SortBy" minOccurs="0" maxOccurs="1"/>
            </xsd:sequence>
            <xsd:attribute name="typeNames" type="csw:TypeNameListType"
               use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:simpleType name="TypeNameListType" id="TypeNameListType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">The exact syntax is defined in an application profile. If querying 
       against the common record properties, only a single type may be 
       specified (Record).</xsd:documentation>
      </xsd:annotation>
      <xsd:list itemType="xsd:QName"/>
   </xsd:simpleType>
   <xsd:element name="Constraint" type="csw:QueryConstraintType" id="Constraint"/>
   <xsd:complexType name="QueryConstraintType" id="QueryConstraintType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">A search constraint that adheres to one of the following syntaxes:
         Filter   - OGC filter expression
         CqlText  - OGC CQL predicate</xsd:documentation>
      </xsd:annotation>
      <xsd:choice>
         <xsd:element ref="ogc:Filter"/>
         <xsd:element name="CqlText" type="xsd:string"/>
      </xsd:choice>
      <xsd:attribute name="version" type="xsd:string" use="required">
         <xsd:annotation>
            <xsd:documentation>Query language version</xsd:documentation>
         </xsd:annotation>
      </xsd:attribute>
   </xsd:complexType>
   <xsd:element name="ElementSetName" type="csw:ElementSetNameType"
      id="ElementSetName" default="summary"/>
   <xsd:complexType name="ElementSetNameType" id="ElementSetNameType">
      <xsd:simpleContent>
         <xsd:extension base="csw:ElementSetType">
            <xsd:attribute name="typeNames" type="csw:TypeNameListType"
               use="optional"/>
         </xsd:extension>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:simpleType name="ElementSetType" id="ElementSetType">
      <xsd:annotation>
         <xsd:documentation>Named subsets of catalogue object properties; these
         views are mapped to a specific information model and
         are defined in an application profile.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="brief"/>
         <xsd:enumeration value="summary"/>
         <xsd:enumeration value="full"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:element name="GetRecordsResponse" type="csw:GetRecordsResponseType"
      id="GetRecordsResponse"/>
   <xsd:complexType name="GetRecordsResponseType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            The response message for a GetRecords request. Some or all of the 
            matching records may be included as children of the SearchResults 
            element. The RequestId is only included if the client specified it.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="RequestId" type="xsd:anyURI" minOccurs="0"/>
         <xsd:element name="SearchStatus" type="csw:RequestStatusType"/>
         <xsd:element name="SearchResults" type="csw:SearchResultsType"/>
      </xsd:sequence>
      <xsd:attribute name="version" type="xsd:string" use="optional"/>
   </xsd:complexType>

   <xsd:complexType name="RequestStatusType" id="RequestStatusType">
      <xsd:annotation>
         <xsd:documentation>
            timestamp - the date and time when the result set was modified 
                        (ISO 8601 format: YYYY-MM-DDThh:mm:ss[+|-]hh:mm).
         </xsd:documentation>
      </xsd:annotation>
      <xsd:attribute name="timestamp" type="xsd:dateTime" use="optional"/>
   </xsd:complexType>

   <xsd:complexType name="SearchResultsType" id="SearchResultsType">
      <xsd:annotation>
         <xsd:documentation>Includes representations of result set members if maxRecords &gt; 0.
         The items must conform to one of the csw:Record views or a 
         profile-specific representation. 
         
         resultSetId  - id of the result set (a URI).
         elementSet  - The element set that has been returned
                       (i.e., "brief", "summary", "full")
         recordSchema  - schema reference for included records(URI)
         numberOfRecordsMatched  - number of records matched by the query
         numberOfRecordsReturned - number of records returned to client
         nextRecord - position of next record in the result set
                      (0 if no records remain).
         expires - the time instant when the result set expires and 
                   is discarded (ISO 8601 format)</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:element ref="csw:AbstractRecord"
                         minOccurs="0" maxOccurs="unbounded"/>
            <xsd:any processContents="strict" namespace="##other"
                     minOccurs="0" maxOccurs="unbounded"/>
         </xsd:choice>
      </xsd:sequence>
      <xsd:attribute name="resultSetId"
                     type="xsd:anyURI" use="optional"/>
      <xsd:attribute name="elementSet"
                     type="csw:ElementSetType" use="optional"/>
      <xsd:attribute name="recordSchema"
                     type="xsd:anyURI" use="optional"/>
      <xsd:attribute name="numberOfRecordsMatched"
                     type="xsd:nonNegativeInteger" use="required"/>
      <xsd:attribute name="numberOfRecordsReturned"
                     type="xsd:nonNegativeInteger" use="required"/>
      <xsd:attribute name="nextRecord"
                     type="xsd:nonNegativeInteger" use="required"/>
      <xsd:attribute name="expires" type="xsd:dateTime" use="optional"/>
   </xsd:complexType>
   <xsd:element name="GetRecordById" type="csw:GetRecordByIdType"
      id="GetRecordById"/>
   <xsd:complexType name="GetRecordByIdType" id="GetRecordByIdType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Convenience operation to retrieve default record representations 
            by identifier.
            Id - object identifier (a URI) that provides a reference to a 
                 catalogue item (or a result set if the catalogue supports 
                 persistent result sets).
            ElementSetName - one of "brief, "summary", or "full"
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:RequestBaseType">
            <xsd:sequence>
               <xsd:element name="Id" type="xsd:anyURI" maxOccurs="unbounded"/>
               <xsd:element ref="csw:ElementSetName" minOccurs="0"/>
            </xsd:sequence>
            <xsd:attribute name="outputFormat" type="xsd:string"
                           use="optional" default="application/xml"/>
            <xsd:attribute name="outputSchema" type="xsd:anyURI"
                           use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:element name="GetRecordByIdResponse"
      type="csw:GetRecordByIdResponseType" id="GetRecordByIdResponse"/>
   <xsd:complexType name="GetRecordByIdResponseType"
      id="GetRecordByIdResponseType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">Returns a representation of the matching entry. If there is no 
         matching record, the response message must be empty.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:element ref="csw:AbstractRecord"
                         minOccurs="0" maxOccurs="unbounded"/>
            <xsd:any processContents="strict" namespace="##other"
                     minOccurs="0" maxOccurs="unbounded"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="GetDomain" type="csw:GetDomainType" id="GetDomain"/>
   <xsd:complexType name="GetDomainType" id="GetDomainType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">Requests the actual values of some specified request parameter 
        or other data element.</xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:RequestBaseType">
            <xsd:sequence>
               <xsd:choice>
                  <xsd:element name="PropertyName" type="xsd:anyURI"/>
                  <xsd:element name="ParameterName" type="xsd:anyURI"/>
               </xsd:choice>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:element name="GetDomainResponse" type="csw:GetDomainResponseType"
      id="GetDomainResponse"/>
   <xsd:complexType name="GetDomainResponseType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">Returns the actual values for some property. In general this is a
         subset of the value domain (that is, set of permissible values),
         although in some cases these may be the same.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="DomainValues" type="csw:DomainValuesType"
            maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="DomainValuesType" id="DomainValuesType">
      <xsd:sequence>
         <xsd:choice>
            <xsd:element name="PropertyName" type="xsd:anyURI"/>
            <xsd:element name="ParameterName" type="xsd:anyURI"/>
         </xsd:choice>
         <xsd:choice minOccurs="0">
            <xsd:element name="ListOfValues" type="csw:ListOfValuesType"/>
            <xsd:element name="ConceptualScheme" type="csw:ConceptualSchemeType"/>
            <xsd:element name="RangeOfValues" type="csw:RangeOfValuesType"/>
         </xsd:choice>
      </xsd:sequence>
      <xsd:attribute name="type" type="xsd:QName" use="required"/>
      <xsd:attribute name="uom" type="xsd:anyURI" use="optional"/>
   </xsd:complexType>
   <xsd:complexType name="ListOfValuesType" id="ListOfValuesType">
      <xsd:sequence>
         <xsd:element name="Value" type="xsd:anyType" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ConceptualSchemeType" id="ConceptualSchemeType">
      <xsd:sequence>
         <xsd:element name="Name" type="xsd:string"/>
         <xsd:element name="Document" type="xsd:anyURI"/>
         <xsd:element name="Authority" type="xsd:anyURI"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="RangeOfValuesType" id="RangeOfValuesType">
      <xsd:sequence>
         <xsd:element name="MinValue" type="xsd:anyType"/>
         <xsd:element name="MaxValue" type="xsd:anyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="Acknowledgement" type="csw:AcknowledgementType"
      id="Acknowledgement"/>
   <xsd:complexType name="AcknowledgementType" id="AcknowledgementType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">This is a general acknowledgement response message for all requests 
         that may be processed in an asynchronous manner.
         EchoedRequest - Echoes the submitted request message
         RequestId     - identifier for polling purposes (if no response 
                         handler is available, or the URL scheme is
                         unsupported)</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="EchoedRequest" type="csw:EchoedRequestType"/>
         <xsd:element name="RequestId" type="xsd:anyURI" minOccurs="0"/>
      </xsd:sequence>
      <xsd:attribute name="timeStamp" type="xsd:dateTime" use="required"/>
   </xsd:complexType>
   <xsd:complexType name="EchoedRequestType" id="EchoedRequestType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">Includes a copy of the request message body.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:any namespace="##any" processContents="lax"/>
      </xsd:sequence>
   </xsd:complexType>
   
   <xsd:element name="Transaction" type="csw:TransactionType" id="Transaction"/>
   <xsd:complexType name="TransactionType" id="TransactionType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Users may insert, update, or delete catalogue entries. If the 
            verboseResponse attribute has the value "true", then one or more 
            csw:InsertResult elements must be included in the response.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:RequestBaseType">
            <xsd:sequence>
               <xsd:choice minOccurs="1" maxOccurs="unbounded">
                  <xsd:element name="Insert" type="csw:InsertType"/>
                  <xsd:element name="Update" type="csw:UpdateType"/>
                  <xsd:element name="Delete" type="csw:DeleteType"/>
               </xsd:choice>
            </xsd:sequence>
            <xsd:attribute name="verboseResponse" type="xsd:boolean"
               use="optional" default="false"/>
            <xsd:attribute name="requestId" type="xsd:anyURI" use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="InsertType" id="InsertType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Submits one or more records to the catalogue. The representation
            is defined by the application profile. The handle attribute
            may be included to specify a local identifier for the action 
            (it must be unique within the context of the transaction).
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:any processContents="strict" namespace="##other"
            maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="typeName" type="xsd:anyURI" use="optional"/>
      <xsd:attribute name="handle" type="xsd:ID" use="optional"/>
   </xsd:complexType>
   <xsd:complexType name="UpdateType" id="UpdateType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Update statements may replace an entire record or only update part 
            of a record:
            1) To replace an existing record, include a new instance of the 
               record;
            2) To update selected properties of an existing record, include
               a set of RecordProperty elements. The scope of the update
               statement  is determined by the Constraint element.
               The 'handle' is a local identifier for the action.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:any processContents="strict" namespace="##other"/>
            <xsd:sequence>
               <xsd:element ref="csw:RecordProperty" maxOccurs="unbounded"/>
               <xsd:element ref="csw:Constraint"/>
            </xsd:sequence>
         </xsd:choice>
      </xsd:sequence>
      <xsd:attribute name="handle" type="xsd:ID" use="optional"/>
   </xsd:complexType>
   <xsd:complexType name="DeleteType" id="DeleteType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Deletes one or more catalogue items that satisfy some set of 
            conditions.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element ref="csw:Constraint" minOccurs="1" maxOccurs="1"/>
      </xsd:sequence>
      <xsd:attribute name="typeName" type="xsd:anyURI" use="optional"/>
      <xsd:attribute name="handle" type="xsd:ID" use="optional"/>
   </xsd:complexType>
   <xsd:element name="RecordProperty" type="csw:RecordPropertyType">
      <xsd:annotation>
         <xsd:documentation>
            The RecordProperty element is used to specify the new
            value of a record property in an update statement.
         </xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:complexType name="RecordPropertyType">
      <xsd:sequence>
         <xsd:element name="Name" type="xsd:string">
            <xsd:annotation>
               <xsd:documentation>
                  The Name element contains the name of a property
                  to be updated.  The name may be a path expression.
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="Value" type="xsd:anyType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>
                  The Value element contains the replacement value for the
                  named property.
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="TransactionResponse" type="csw:TransactionResponseType"
      id="TransactionResponse"/>
   <xsd:complexType name="TransactionResponseType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            The response for a transaction request that was successfully
            completed. If the transaction failed for any reason, a service 
            exception report indicating a TransactionFailure is returned
            instead.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="TransactionSummary"
            type="csw:TransactionSummaryType"/>
         <xsd:element name="InsertResult" type="csw:InsertResultType"
            minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="version" type="xsd:string" use="optional"/>
   </xsd:complexType>
   <xsd:complexType name="TransactionSummaryType" id="TransactionSummaryType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
         Reports the total number of catalogue items modified by a transaction 
         request (i.e, inserted, updated, deleted). If the client did not 
         specify a requestId, the server may assign one (a URI value).
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="totalInserted" type="xsd:nonNegativeInteger"
            minOccurs="0"/>
         <xsd:element name="totalUpdated" type="xsd:nonNegativeInteger"
            minOccurs="0"/>
         <xsd:element name="totalDeleted" type="xsd:nonNegativeInteger"
            minOccurs="0"/>
      </xsd:sequence>
      <xsd:attribute name="requestId" type="xsd:anyURI" use="optional"/>
   </xsd:complexType>
   <xsd:complexType name="InsertResultType" id="InsertResultType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Returns a "brief" view of any newly created catalogue records.
            The handle attribute may reference a particular statement in
            the corresponding transaction request.
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element ref="csw:BriefRecord" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="handleRef" type="xsd:anyURI" use="optional"/>
   </xsd:complexType>
   <xsd:element name="Harvest" type="csw:HarvestType" id="Harvest"/>
   <xsd:complexType name="HarvestType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
         Requests that the catalogue attempt to harvest a resource from some 
         network location identified by the source URL.

         Source          - a URL from which the resource is retrieved
         ResourceType    - normally a URI that specifies the type of the resource
                           (DCMES v1.1) being harvested if it is known.
         ResourceFormat  - a media type indicating the format of the 
                           resource being harvested.  The default is 
                           "application/xml".
         ResponseHandler - a reference to some endpoint to which the 
                           response shall be forwarded when the
                           harvest operation has been completed
         HarvestInterval - an interval expressed using the ISO 8601 syntax; 
                           it specifies the interval between harvest 
                           attempts (e.g., P6M indicates an interval of 
                           six months).
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="csw:RequestBaseType">
            <xsd:sequence>
               <xsd:element name="Source" type="xsd:anyURI"/>
               <xsd:element name="ResourceType" type="xsd:string"/>
               <xsd:element name="ResourceFormat" type="xsd:string"
                  minOccurs="0" default="application/xml"/>
               <xsd:element name="HarvestInterval" type="xsd:duration"
                  minOccurs="0"/>
               <xsd:element name="ResponseHandler" type="xsd:anyURI"
                  minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:element name="HarvestResponse" type="csw:HarvestResponseType"
      id="HarvestResponse">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
         The content of the response varies depending on the presence of the 
         ResponseHandler element. If present, then the catalogue should 
         verify the request and respond immediately with an csw:Acknowledgement 
         element in the response. The catalogue must then attempt to harvest 
         the resource at some later time and send the response message to the 
         location specified by the value of the ResponseHandler element using 
         the indicated protocol (e.g. ftp, mailto, http).
         
         If the ResponseHandler element is absent, then the catalogue 
         must attempt to harvest the resource immediately and include a 
         TransactionResponse element in the response.
        
         In any case, if the harvest attempt is successful the response 
         shall include summary representations of the newly created 
         catalogue item(s).
         </xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:complexType name="HarvestResponseType" id="HarvestResponseType">
      <xsd:choice>
         <xsd:element ref="csw:Acknowledgement"/>
         <xsd:element ref="csw:TransactionResponse"/>
      </xsd:choice>
   </xsd:complexType>
</xsd:schema>
