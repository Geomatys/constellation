<?xml version="1.0" encoding="UTF-8"?>
<ctl:package
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:ctlp="http://www.occamlab.com/te/parsers"
 xmlns:p="http://teamengine.sourceforge.net/parsers"
 xmlns:xi="http://www.w3.org/2001/XInclude">
	
    <xi:include href="functions.xml"/>
    
	<!-- Sample usage:
	<ctl:call-test name="ctl:SchematronValidatingParser">
		<ctl:with-param name="doc" select="$response"/>
		<ctl:with-param name="schema">sch/csw/2.0.2/CSWCapabilities.sch</ctl:with-param>
		<ctl:with-param name="phase">DefaultPhase</ctl:with-param>
	</ctl:call-test>
    -->
	<ctl:test name="ctl:SchematronValidatingParser">
			<ctl:param name="doc"/>
			<ctl:param name="schema"/>
			<ctl:param name="phase"/>
			<ctl:assertion>Validate an XML instance against a Schematron schema using the given phase.</ctl:assertion>
			<ctl:code>
				<xsl:choose>
					<xsl:when test="not($doc)">
						<ctl:message>Error: Null input document.</ctl:message>
						<ctl:fail/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:variable name="results">
							<ctl:call-function name="ctl:SchematronValidator">
								<ctl:with-param name="doc"><xsl:copy-of select="$doc"/></ctl:with-param>
								<ctl:with-param name="schema" select="string($schema)"/>
								<ctl:with-param name="phase" select="string($phase)"/>
							</ctl:call-function>
						</xsl:variable>
						<xsl:if test="count($results/*) > 0">
							<ctl:message>Total number of errors detected: <xsl:copy-of select="count($results/*)"/></ctl:message>
							<xsl:for-each select="$results/*">
								<ctl:message><xsl:value-of select="concat('Error ', position())"/>: <xsl:copy-of select="."/></ctl:message>
							</xsl:for-each>
							<ctl:fail/>
						</xsl:if>
					</xsl:otherwise>
				</xsl:choose>
			</ctl:code>
	</ctl:test>	

	<!-- Sample usage:
	<ctl:call-test name="ctl:XMLValidatingParser">
			<ctl:with-param name="doc"><xsl:copy-of select="$response"/></ctl:with-param>
			<ctl:with-param name="instruction">
				<ctlp:schemas>
					<ctlp:schema type="resource">xsd/ogc/csw/2.0.2/csw-2.0.2.xsd</ctlp:schema>
				</ctlp:schemas>
			</ctl:with-param>
	</ctl:call-test>
    -->
  <ctl:test name="ctl:XMLValidatingParser">
    <ctl:param name="doc"/>
    <ctl:param name="instruction"/>
    <ctl:assertion>Validates the XML instance against the set of XML Schemas specified using the given instruction parameter.</ctl:assertion>
    <ctl:code>
		<xsl:choose>
			<xsl:when test="not($doc)">
				<ctl:message>Error: Null input document.</ctl:message>
				<ctl:fail/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:variable name="results">
					<ctl:call-function name="ctl:XMLValidator">
						<ctl:with-param name="doc"><xsl:copy-of select="$doc"/></ctl:with-param>
						<ctl:with-param name="instruction"><xsl:copy-of select="$instruction"/></ctl:with-param>
					</ctl:call-function>
				</xsl:variable>
				<xsl:if test="count($results/*) > 0">
					<ctl:message>Total number of errors detected: <xsl:copy-of select="count($results/*)"/></ctl:message>
					<xsl:for-each select="$results/*">
						<ctl:message><xsl:value-of select="concat('Error ', position())"/>: <xsl:copy-of select="."/></ctl:message>
					</xsl:for-each>
					<ctl:fail/>
				</xsl:if>
			</xsl:otherwise>
		</xsl:choose>
    </ctl:code>
  </ctl:test>

	<!-- Sample usage:
	<ctl:call-test name="ctl:XMLValidatingParser.CSW">
	    <ctl:with-param name="doc"><xsl:copy-of select="$response//content/*"/></ctl:with-param>
	</ctl:call-test>
    -->
	<ctl:test name="ctl:XMLValidatingParser.CSW">
			<ctl:param name="doc"/>
			<ctl:assertion>
            Validates a given XML document against the CSW 2.0.2 schema set.
            </ctl:assertion>
			<ctl:code>
				<ctl:call-test name="ctl:XMLValidatingParser">
					<ctl:with-param name="doc"><xsl:copy-of select="$doc"/></ctl:with-param>
					<ctl:with-param name="instruction">				
						<ctlp:schemas>
							<ctlp:schema type="resource">xsd/ogc/csw/2.0.2/csw-2.0.2.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctl:with-param>
				</ctl:call-test>
			</ctl:code>
	</ctl:test>	
	
	<ctl:parser name="p:XMLValidatingParser.CSW">
		<ctl:java class="com.occamlab.te.parsers.XMLValidatingParser" 
                  method="parse" 
                  initialized="true">
			<ctl:with-param name="schemas_links">
				<ctlp:schemas>
					<ctlp:schemas>
							<ctlp:schema type="resource">xsd/ogc/csw/2.0.2/csw-2.0.2.xsd</ctlp:schema>
						</ctlp:schemas>
				</ctlp:schemas>
			</ctl:with-param>
		</ctl:java>
	</ctl:parser>	

	<ctl:parser name="p:XMLValidatingParser.OWS">
		<ctl:java class="com.occamlab.te.parsers.XMLValidatingParser" method="parse" initialized="true">
			<ctl:with-param name="schemas_links">
				<ctlp:schemas>
					<ctlp:schema type="resource">xsd/ogc/ows/1.0.0/ows-1.0.0.xsd</ctlp:schema>
				</ctlp:schemas>
			</ctl:with-param>
		</ctl:java>
	</ctl:parser>	
	
	<ctl:parser name="p:XMLValidatingParser.XMLSchema">
		<ctl:java class="com.occamlab.te.parsers.XMLValidatingParser" method="parse" initialized="true">
			<ctl:with-param name="schemas_links">
				<ctlp:schemas>
					<ctlp:schema type="resource">xsd/w3c/xmlschema/1.0/XMLSchema.xsd</ctlp:schema>
				</ctlp:schemas>
			</ctl:with-param>
		</ctl:java>
	</ctl:parser>		
	
	<!-- Sample usage:
	<p:SchematronValidatingParser>
	    <ctlp:schemas>
		    <ctlp:schema type="resource" phase="Default">sch/csw/2.0.2/CSWCapabilities.sch</ctlp:schema>
	    </ctlp:schemas>
	</p:SchematronValidatingParser>
    -->
	<ctl:parser name="p:SchematronValidatingParser">
		<ctl:param name="schema_link"/>
		<ctl:java class="com.occamlab.te.parsers.SchematronValidatingParser" 
                  method="parse" 
                  initialized="true"/>
	</ctl:parser>		
	
	<!-- Sample usage:
	<p:SchematronValidatingParser.CSWCapabilities />
    -->
	<ctl:parser name="p:SchematronValidatingParser.CSWCapabilities">
		<ctl:java class="com.occamlab.te.parsers.SchematronValidatingParser" 
                  method="parse" 
                  initialized="true">
			<ctl:with-param name="schema_link">
					<ctlp:schemas>
						<ctlp:schema type="resource" phase="DefaultPhase">sch/csw/2.0.2/Capabilities.sch</ctlp:schema>
					</ctlp:schemas>
			</ctl:with-param>
		</ctl:java>
	</ctl:parser>	
	
</ctl:package>