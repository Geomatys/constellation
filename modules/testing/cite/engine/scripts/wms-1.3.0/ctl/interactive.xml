<?xml version="1.0" encoding="utf-8"?>
<ctl:package
 xmlns:interactive="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/interactive.xml"
 xmlns:functions="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/functions.xml"
 xmlns:wms="http://www.opengis.net/wms"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
>

   <ctl:test name="interactive:main">
      <ctl:param name="basic"/>
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>The tests that require user interaction behave properly.</ctl:assertion>
      <ctl:code>
         <xsl:if test="$basic='basic'">
            <ctl:call-test name="interactive:basic-polygons-sanity-check"/>
            <ctl:call-test name="interactive:blue-lake-sanity-check"/>
            <ctl:call-test name="interactive:layer-order"/>
            <ctl:call-test name="interactive:aspect-ratio"/>
         </xsl:if>
         <xsl:if test="wms:Capability/wms:Exception[wms:Format='INIMAGE']">
            <ctl:call-test name="interactive:exceptions-inimage"/>
         </xsl:if>
         <ctl:call-test name="interactive:fees-and-access-constraints"/>
      </ctl:code>
   </ctl:test>

   <ctl:test name="interactive:basic-polygons-sanity-check">
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>The diamond from the cite:BasicPolygons layer displays correctly.</ctl:assertion>
      <ctl:code>
         <xsl:variable name="form-values">
            <ctl:form width="700" height="500">
               <img border="1">
                  <xsl:attribute name="src">
                     <xsl:value-of select="functions:correct-url-prefix(wms:Capability/wms:Request/wms:GetMap/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href)"/>
                     <xsl:text>VERSION=</xsl:text>
                     <xsl:value-of select="functions:version()"/>
                     <xsl:text>&amp;REQUEST=GetMap</xsl:text>
                     <xsl:text>&amp;LAYERS=</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:BasicPolygons']/wms:Name))"/>
                     <xsl:text>&amp;STYLES=</xsl:text>
                     <xsl:text>&amp;CRS=CRS:84</xsl:text>
                     <xsl:text>&amp;BBOX=-1,-1,1,1</xsl:text>
                     <xsl:text>&amp;WIDTH=300</xsl:text>
                     <xsl:text>&amp;HEIGHT=300</xsl:text>
                     <xsl:text>&amp;FORMAT=</xsl:text>
                     <xsl:value-of select="functions:encode(wms:Capability/wms:Request/wms:GetMap/wms:Format[starts-with(., 'image/png') or starts-with(., 'image/gif') or starts-with(., 'image/jpeg')][1])"/>
                  </xsl:attribute>
               </img>
               <p>
                  Does the image above depict a large diamond that fills the frame?
               </p>
               <p>
                  <input type="submit" name="submit" value="yes"/>
                  <input type="submit" name="submit" value="no"/>
               </p>
            </ctl:form>
         </xsl:variable>
         <xsl:if test="not($form-values/values/value[@key='submit']='yes')">
            <ctl:fail/>
         </xsl:if>
      </ctl:code>
   </ctl:test>

   <ctl:test name="interactive:blue-lake-sanity-check">
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>The layers from the Blue Lake dataset display correctly.</ctl:assertion>
      <ctl:code>
         <xsl:variable name="form-values">
            <ctl:form width="700" height="500">
               <img>
                  <xsl:attribute name="src">
                     <xsl:value-of select="functions:correct-url-prefix(wms:Capability/wms:Request/wms:GetMap/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href)"/>
                     <xsl:text>VERSION=</xsl:text>
                     <xsl:value-of select="functions:version()"/>
                     <xsl:text>&amp;REQUEST=GetMap</xsl:text>
                     <xsl:text>&amp;LAYERS=</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Streams']/wms:Name))"/>
                     <xsl:text>,</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Lakes']/wms:Name))"/>
                     <xsl:text>,</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Ponds']/wms:Name))"/>
                     <xsl:text>,</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Bridges']/wms:Name))"/>
                     <xsl:text>,</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:RoadSegments']/wms:Name))"/>
                     <xsl:text>,</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:DividedRoutes']/wms:Name))"/>
                     <xsl:text>,</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Buildings']/wms:Name))"/>
                     <xsl:text>,</xsl:text>
                     <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:MapNeatline']/wms:Name))"/>
                     <xsl:text>&amp;STYLES=</xsl:text>
                     <xsl:text>&amp;CRS=CRS:84</xsl:text>
                     <xsl:text>&amp;BBOX=-0.005,-0.0025,.005,0.0025</xsl:text>
                     <xsl:text>&amp;WIDTH=400</xsl:text>
                     <xsl:text>&amp;HEIGHT=200</xsl:text>
                     <xsl:text>&amp;FORMAT=</xsl:text>
                     <xsl:value-of select="functions:encode(wms:Capability/wms:Request/wms:GetMap/wms:Format[starts-with(., 'image/png') or starts-with(., 'image/gif') or starts-with(., 'image/jpeg')][1])"/>
                  </xsl:attribute>
               </img>
               <p>
                  Does the image above depict a map of the Blue Lake vicinity with a surrounding neatline?
               </p>
               <p>
                  Refer to the <a href="images/bluelake_features.gif" target="_blank">overview</a> for a diagram of the Blue Lake vicinity features.
               </p>
               <p>
                  <input type="submit" name="submit" value="yes"/>
                  <input type="submit" name="submit" value="no"/>
               </p>
            </ctl:form>
         </xsl:variable>
         <xsl:if test="not($form-values/values/value[@key='submit']='yes')">
            <ctl:fail/>
         </xsl:if>
      </ctl:code>
   </ctl:test>

   <ctl:test name="interactive:layer-order">
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>When a GetMap request contains multiple layers, then the response renders the requested layers by drawing the leftmost in the list bottommost, and the next one over that.</ctl:assertion>
      <ctl:comment>The user will be asked to manually verify that for request #1, Goose Island, Blue Lake, and Ashton are above State Forest.  For request #2, State Forest is above Ashton, and Blue Lake and Goose Island are not visible.  Depending on the styles the implementation uses, it may not be possible to tell which feature is on top of another.</ctl:comment>
      <ctl:link title="WMS 1.3.0 section 7.3.3.3">http://cite.opengeospatial.org/OGCTestData/wms/1.3.0/spec/wms1_3.html#wmsops.getmap.params.layers</ctl:link>
      <ctl:code>
         <xsl:variable name="form-values">
            <ctl:form width="700" height="500">
               <table>
                  <tr>
                     <td>
                        <img>
                           <xsl:attribute name="src">
                              <xsl:value-of select="functions:correct-url-prefix(wms:Capability/wms:Request/wms:GetMap/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href)"/>
                              <xsl:text>VERSION=</xsl:text>
                              <xsl:value-of select="functions:version()"/>
                              <xsl:text>&amp;REQUEST=GetMap</xsl:text>
                              <xsl:text>&amp;LAYERS=</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Forests']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Lakes']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:NamedPlaces']/wms:Name))"/>
                              <xsl:text>&amp;STYLES=</xsl:text>
                              <xsl:text>&amp;CRS=CRS:84</xsl:text>
                              <xsl:text>&amp;BBOX=-0.0042,-0.0024,0.0042,0.0024</xsl:text>
                              <xsl:text>&amp;WIDTH=168</xsl:text>
                              <xsl:text>&amp;HEIGHT=96</xsl:text>
                              <xsl:text>&amp;FORMAT=</xsl:text>
                              <xsl:value-of select="functions:encode(wms:Capability/wms:Request/wms:GetMap/wms:Format[starts-with(., 'image/png') or starts-with(., 'image/gif') or starts-with(., 'image/jpeg')][1])"/>
                           </xsl:attribute>
                        </img>
                     </td>
                     <td>
                        <img>
                           <xsl:attribute name="src">
                              <xsl:value-of select="functions:correct-url-prefix(wms:Capability/wms:Request/wms:GetMap/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href)"/>
                              <xsl:text>VERSION=</xsl:text>
                              <xsl:value-of select="functions:version()"/>
                              <xsl:text>&amp;REQUEST=GetMap</xsl:text>
                              <xsl:text>&amp;LAYERS=</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:NamedPlaces']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Lakes']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Forests']/wms:Name))"/>
                              <xsl:text>&amp;STYLES=</xsl:text>
                              <xsl:text>&amp;CRS=CRS:84</xsl:text>
                              <xsl:text>&amp;BBOX=-0.0042,-0.0024,0.0042,0.0024</xsl:text>
                              <xsl:text>&amp;WIDTH=168</xsl:text>
                              <xsl:text>&amp;HEIGHT=96</xsl:text>
                              <xsl:text>&amp;FORMAT=</xsl:text>
                              <xsl:value-of select="functions:encode(wms:Capability/wms:Request/wms:GetMap/wms:Format[starts-with(., 'image/png') or starts-with(., 'image/gif') or starts-with(., 'image/jpeg')][1])"/>
                           </xsl:attribute>
                        </img>
                     </td>
                  </tr>
               </table>
               <p>
                   In the picture on the left, Goose Island, Blue Lake, and Ashton should be above State Forest.
                   In the picture on the right, State Forest should be above Ashton, Blue Lake, and Goose Island.
                   Are the pictures correct?
               </p>
               <p>
                  Refer to the <a href="images/bluelake_features.gif" target="_blank">Overview of Blue Lake vicinity features</a>
                  for a diagram of the relevant features.
               </p>
               <p>
                  <input xmlns="" type="submit" name="submit" value="yes"/>
                  <input xmlns="" type="submit" name="submit" value="no"/>
               </p>
            </ctl:form>
         </xsl:variable>
         <xsl:if test="not($form-values/values/value[@key='submit']='yes')">
            <ctl:fail/>
         </xsl:if>
      </ctl:code>
   </ctl:test>

   <ctl:test name="interactive:aspect-ratio">
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>When a GetMap request is made where the aspect ratio of the BBOX and the aspect ratio of the WIDTH/HEIGHT parameters is different, then the map returned is stretched.</ctl:assertion>
      <ctl:comment>The user will be asked to manually verify that the two images look the same, except that the image #2 is stretched so it is twice as tall as image #1.</ctl:comment>
      <ctl:link title="WMS 1.3.0 section 7.3.3.8">http://cite.opengeospatial.org/OGCTestData/wms/1.3.0/spec/wms1_3.html#wmsops.getmap.params.width_height</ctl:link>
      <ctl:code>
         <xsl:variable name="form-values">
            <ctl:form width="700" height="500">
               <table>
                  <tr>
                     <td>
                        <img>
                           <xsl:attribute name="src">
                              <xsl:value-of select="functions:correct-url-prefix(wms:Capability/wms:Request/wms:GetMap/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href)"/>
                              <xsl:text>VERSION=</xsl:text>
                              <xsl:value-of select="functions:version()"/>
                              <xsl:text>&amp;REQUEST=GetMap</xsl:text>
                              <xsl:text>&amp;LAYERS=</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Streams']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Lakes']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Ponds']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Bridges']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:RoadSegments']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:DividedRoutes']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Buildings']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:MapNeatline']/wms:Name))"/>
                              <xsl:text>&amp;STYLES=</xsl:text>
                              <xsl:text>&amp;CRS=CRS:84</xsl:text>
                              <xsl:text>&amp;BBOX=-0.005,-0.0025,0.005,0.0025</xsl:text>
                              <xsl:text>&amp;WIDTH=200</xsl:text>
                              <xsl:text>&amp;HEIGHT=100</xsl:text>
                              <xsl:text>&amp;FORMAT=</xsl:text>
                              <xsl:value-of select="functions:encode(wms:Capability/wms:Request/wms:GetMap/wms:Format[starts-with(., 'image/png') or starts-with(., 'image/gif') or starts-with(., 'image/jpeg')][1])"/>
                           </xsl:attribute>
                        </img>
                     </td>
                     <td>
                        <img>
                           <xsl:attribute name="src">
                              <xsl:value-of select="functions:correct-url-prefix(wms:Capability/wms:Request/wms:GetMap/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href)"/>
                              <xsl:text>VERSION=</xsl:text>
                              <xsl:value-of select="functions:version()"/>
                              <xsl:text>&amp;REQUEST=GetMap</xsl:text>
                              <xsl:text>&amp;LAYERS=</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Streams']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Lakes']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Ponds']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Bridges']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:RoadSegments']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:DividedRoutes']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:Buildings']/wms:Name))"/>
                              <xsl:text>,</xsl:text>
                              <xsl:value-of select="functions:encode(string(wms:Capability//wms:Layer[wms:Title = 'cite:MapNeatline']/wms:Name))"/>
                              <xsl:text>&amp;STYLES=</xsl:text>
                              <xsl:text>&amp;CRS=CRS:84</xsl:text>
                              <xsl:text>&amp;BBOX=-0.005,-0.0025,0.005,0.0025</xsl:text>
                              <xsl:text>&amp;WIDTH=200</xsl:text>
                              <xsl:text>&amp;HEIGHT=200</xsl:text>
                              <xsl:text>&amp;FORMAT=</xsl:text>
                              <xsl:value-of select="functions:encode(wms:Capability/wms:Request/wms:GetMap/wms:Format[starts-with(., 'image/png') or starts-with(., 'image/gif') or starts-with(., 'image/jpeg')][1])"/>
                           </xsl:attribute>
                        </img>
                     </td>
                  </tr>
               </table>
               <p>
                  The two pictures above should depict the same scene, but the picture on the right should be stretched so it is twice as tall as the picture on the left.
                  Are the pictures correct?
               </p>
               <p>
                  <input xmlns="" type="submit" name="submit" value="yes"/>
                  <input xmlns="" type="submit" name="submit" value="no"/>
               </p>
            </ctl:form>
         </xsl:variable>
         <xsl:if test="not($form-values/values/value[@key='submit']='yes')">
            <ctl:fail/>
         </xsl:if>
      </ctl:code>
   </ctl:test>

   <ctl:test name="interactive:exceptions-inimage">
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>When an exception is raised and EXCEPTIONS=INIMAGE, then the error messages are graphically returned as part of the content.</ctl:assertion>
      <ctl:comment>The user will be asked to verify that an image containing an error message indicating that the layer requested was not defined is returned.</ctl:comment>
      <ctl:link title="WMS 1.3.0 section 7.3.3.11">http://cite.opengeospatial.org/OGCTestData/wms/1.3.0/spec/wms1_3.html#wmsops.getmap.params.exceptions</ctl:link>
      <ctl:code>
         <xsl:variable name="form-values">
            <ctl:form width="700" height="500">
               <img border="1">
                  <xsl:attribute name="src">
                     <xsl:value-of select="functions:correct-url-prefix(wms:Capability/wms:Request/wms:GetMap/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href)"/>
                     <xsl:text>VERSION=</xsl:text>
                     <xsl:value-of select="functions:version()"/>
                     <xsl:text>&amp;REQUEST=GetMap</xsl:text>
                     <xsl:text>&amp;LAYERS=NonExistant</xsl:text>
                     <xsl:text>&amp;STYLES=</xsl:text>
                     <xsl:text>&amp;CRS=CRS:84</xsl:text>
                     <xsl:text>&amp;BBOX=-1,-1,1,1</xsl:text>
                     <xsl:text>&amp;WIDTH=300</xsl:text>
                     <xsl:text>&amp;HEIGHT=300</xsl:text>
                     <xsl:text>&amp;FORMAT=</xsl:text>
                     <xsl:value-of select="functions:encode(wms:Capability/wms:Request/wms:GetMap/wms:Format[starts-with(., 'image/png') or starts-with(., 'image/gif') or starts-with(., 'image/jpeg')][1])"/>
                     <xsl:text>&amp;EXCEPTIONS=INIMAGE</xsl:text>
                  </xsl:attribute>
               </img>
               <p>
                  Does the image above contain an error message indicating that the layer requested was not defined?
               </p>
               <p>
                  <input xmlns="" type="submit" name="submit" value="yes"/>
                  <input xmlns="" type="submit" name="submit" value="no"/>
               </p>
            </ctl:form>
         </xsl:variable>
         <xsl:if test="not($form-values/values/value[@key='submit']='yes')">
            <ctl:fail/>
         </xsl:if>
      </ctl:code>
   </ctl:test>

   <ctl:test name="interactive:fees-and-access-constraints">
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>When there are no fees or access constraints for using of the service and Fees and AccessConstraints elements are supplied in the service metadata, the reserved word "none" (case-insensitive) is used.</ctl:assertion>
      <ctl:link title="WMS 1.3.0 section 7.3.3.11">http://cite.opengeospatial.org/OGCTestData/wms/1.3.0/spec/wms1_3.html#wmsops.getmap.params.exceptions</ctl:link>
      <ctl:link title="WMS 1.3.0 section 7.2.4.3">http://cite.opengeospatial.org/OGCTestData/wms/1.3.0/spec/wms1_3.html#wmsops.getcapabilities.response.general_metadata</ctl:link>
      <ctl:code>
         <xsl:choose>
            <xsl:when test="(wms:Service/wms:Fees and functions:to-lowercase(wms:Service/wms:Fees) != 'none') or (wms:Service/wms:AccessConstraints and functions:to-lowercase(wms:Service/wms:AccessConstraints) != 'none')">
               <xsl:variable name="form-values">
                  <ctl:form>
                     <xsl:if test="wms:Service/wms:Fees">
                        <pre>&lt;Fees&gt;<xsl:value-of select="wms:Service/wms:Fees"/>&lt;/Fees&gt;</pre>
                     </xsl:if>
                     <xsl:if test="wms:Service/wms:AccessConstraints">
                        <pre>&lt;AccessConstraints&gt;<xsl:value-of select="wms:Service/wms:AccessConstraints"/>&lt;/AccessConstraints&gt;</pre>
                     </xsl:if>
                     <p>
                        The service metadata indicates that there are fees or access constraints for using this service.
                        If there are no fees or access constraints, the elements may be omitted or the reserved keyword none (case insensitive) must be used.
                     </p>
                     <p>
                        Is the service metadata correct?
                     </p>
                     <p>
                        <input xmlns="" type="submit" name="submit" value="yes"/>
                        <input xmlns="" type="submit" name="submit" value="no"/>
                     </p>
                  </ctl:form>
               </xsl:variable>
               <xsl:if test="not($form-values/values/value[@key='submit']='yes')">
                  <ctl:fail/>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <ctl:message>The service metadata indicates that there are no fees or access constraints.</ctl:message>
            </xsl:otherwise>
         </xsl:choose>
      </ctl:code>
   </ctl:test>

</ctl:package>
