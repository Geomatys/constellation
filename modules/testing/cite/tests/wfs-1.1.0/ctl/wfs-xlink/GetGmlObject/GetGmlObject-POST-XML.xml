<?xml version="1.0" encoding="UTF-8"?>
<ctl:package xmlns="http://www.occamlab.com/ctl"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:ocp="http://www.occamlab.com/te/parsers"
 xmlns:tep="http://teamengine.sourceforge.net/parsers"
 xmlns:saxon="http://saxon.sf.net/" 
 xmlns:wfs="http://www.opengis.net/wfs" 
 xmlns:gml="http://www.opengis.net/gml"
 xmlns:sf="http://cite.opengeospatial.org/gmlsf"   
 xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <ctl:test name="wfs:GetGmlObject-POST-XML">
      <ctl:param name="wfs.capabilities.doc"/>
      <ctl:assertion>
      An implementation that supports GetGmlObject requests containing XML 
      entities must satisfy all applicable assertions.
      </ctl:assertion>
      <ctl:code>

		<ctl:call-test name="wfs:GetGmlObject-traverseXlinkDepth">
			<ctl:with-param name="CAPABILITIES" select="$wfs.capabilities.doc" />
		</ctl:call-test>
            
        <xsl:variable name="wfs.GetGmlObject.post.url">
		    <xsl:value-of select="$wfs.capabilities.doc//ows:OperationsMetadata/ows:Operation[@name='GetGmlObject']/ows:DCP/ows:HTTP/ows:Post/@xlink:href"/>
		</xsl:variable>
        <xsl:variable name="wfs.GetFeature.post.url">
			<xsl:value-of select="$wfs.capabilities.doc//ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:DCP/ows:HTTP/ows:Post/@xlink:href"/>
		</xsl:variable>	
        <ctl:message>Target endpoint is <xsl:value-of select="$wfs.GetGmlObject.post.url"/></ctl:message>
        
        <ctl:call-test name="wfs:GetGmlObject-POST-XML-1">
			<ctl:with-param name="wfs.GetGmlObject.post.url" select="$wfs.GetGmlObject.post.url"/>
            <ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetGmlObject-POST-XML-2">
			<ctl:with-param name="wfs.GetGmlObject.post.url" select="$wfs.GetGmlObject.post.url"/>
            <ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetGmlObject-POST-XML-3">
			<ctl:with-param name="wfs.GetGmlObject.post.url" select="$wfs.GetGmlObject.post.url"/>
            <ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetGmlObject-POST-XML-4">
			<ctl:with-param name="wfs.GetGmlObject.post.url" select="$wfs.GetGmlObject.post.url"/>
            <ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
		</ctl:call-test>
        <ctl:call-test name="wfs:GetGmlObject-POST-XML-5">
			<ctl:with-param name="wfs.GetGmlObject.post.url" select="$wfs.GetGmlObject.post.url"/>
            <ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
		</ctl:call-test>
		<ctl:call-test name="wfs:GetGmlObject-POST-XML-6">
			<ctl:with-param name="wfs.GetGmlObject.post.url" select="$wfs.GetGmlObject.post.url"/>
			<ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
		</ctl:call-test>
				
      </ctl:code>
    </ctl:test>
    
    <ctl:test name="wfs:GetGmlObject-POST-XML-1">
      <ctl:param name="wfs.GetGmlObject.post.url"/>
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:assertion>The GetGmlObject request must be implemented (using POST or GET methods)
      if the IUT claims to provide XLink resolution capabilities.</ctl:assertion>
      <ctl:comment>Return a GML object by identifier and resolve any XLinks up to the requested depth.</ctl:comment>
      <ctl:link title="ATC: GetGmlObject request">docs/ats.html#GetGmlObject</ctl:link>
	  <ctl:code>
        <xsl:variable name="GetFeature-rsp">
				<ctl:request>
					<ctl:url>
					  <xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" maxFeatures="20">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:PrimitiveGeoFeature" />
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF1/>
				</ctl:request>
		</xsl:variable>
        <xsl:variable name="points">
          <xsl:copy-of select="$GetFeature-rsp//gml:Point[@gml:id]"/>
        </xsl:variable>
        <xsl:variable name="point1.id">
          <xsl:value-of select="$points/gml:Point[1]/@gml:id"/>
        </xsl:variable>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetGmlObject.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetGmlObject xmlns:wfs="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" 
    version="1.1.0" service="WFS" handle="GetGmlObject-POST-XML-1"
    traverseXlinkDepth="1">
	<ogc:GmlObjectId xmlns:gml="http://www.opengis.net/gml" gml:id="{$point1.id}" />
</wfs:GetGmlObject>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF1/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
              <xsl:if test="not($response/gml:Point/@gml:id = $point1.id)">
                <ctl:message>[FAILURE] Expected gml:Point having @gml:id = '<xsl:value-of select="$point1.id"/>'.</ctl:message>
                <ctl:fail />
              </xsl:if>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>
    
    <ctl:test name="wfs:GetGmlObject-POST-XML-2">
      <ctl:param name="wfs.GetGmlObject.post.url"/>
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:assertion>The GetGmlObject request must be implemented (using POST or GET methods)
      if the IUT claims to provide XLink resolution capabilities.</ctl:assertion>
      <ctl:comment>Return a GML object by identifier and resolve any XLinks up to the requested depth.</ctl:comment>
      <ctl:link title="ATC: GetGmlObject request">docs/ats.html#GetGmlObject</ctl:link>
	  <ctl:code>
        <xsl:variable name="GetFeature-rsp">
				<ctl:request>
					<ctl:url>
					  <xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f202</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>
        <xsl:variable name="sources">
          <xsl:copy-of select="$GetFeature-rsp//sf:LinkedFeature[sf:reference]"/>
        </xsl:variable>
        <xsl:variable name="feature.id">
          <xsl:value-of select="$sources/sf:LinkedFeature[1]/@gml:id"/>
        </xsl:variable>
        <xsl:variable name="target.id">
          <xsl:value-of select="$sources/sf:LinkedFeature[1]/sf:reference/*[1]/@gml:id"/>
        </xsl:variable>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetGmlObject.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetGmlObject xmlns:wfs="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" 
    version="1.1.0" service="WFS" handle="GetGmlObject-POST-XML-2"
    traverseXlinkDepth="1">
    <ogc:GmlObjectId xmlns:gml="http://www.opengis.net/gml" gml:id="{$feature.id}" />
</wfs:GetGmlObject>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
              <xsl:variable name="feature" select="$response//sf:LinkedFeature" />
              <xsl:if test="not($feature/sf:reference/*)">
                <ctl:message>[FAILURE] XLink element was not properly resolved (where @gml:id = <xsl:value-of select="$feature/@gml:id"/>).</ctl:message>
                <ctl:fail />
              </xsl:if>
              <xsl:if test="$feature/sf:reference/@xlink:href">
                <ctl:message>[FAILURE] XLink locator attribute was not removed from link element (where @gml:id = <xsl:value-of select="$feature/@gml:id"/>)</ctl:message>
                <ctl:fail />
              </xsl:if>
              <xsl:if test="$feature/sf:reference/*[1]/@gml:id != $target.id">
                <ctl:message>[FAILURE] Expected target feature id = <xsl:value-of select="$target.id"/> (found <xsl:value-of select="sf:reference/*[1]/@gml:id"/>)</ctl:message>
                <ctl:fail />
              </xsl:if>
              <xsl:if test="not($feature/sf:reference/comment())">
                <ctl:message>[FAILURE] Missing comment in link element (should indicate target href)</ctl:message>
                <ctl:fail />
              </xsl:if>
              <xsl:variable name="feature.L2" select="$feature/sf:reference/sf:PrimitiveGeoFeature" />
              <xsl:if test="not(count($feature.L2/sf:relatedFeature/*) = 0)">
                <ctl:message>[FAILURE] traverseXlinkDepth="1", but second-level link was resolved (source: @gml:id = <xsl:value-of select="$feature.L2/@gml:id"/>)</ctl:message>
                <ctl:fail />
              </xsl:if>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetGmlObject-POST-XML-3">
      <ctl:param name="wfs.GetGmlObject.post.url"/>
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:assertion>The GetGmlObject request must be implemented (using POST or GET methods)
      if the IUT claims to provide XLink resolution capabilities.</ctl:assertion>
      <ctl:comment>XLinks must NOT be resolved for GMLSF level 0 or 1 as the only 
      element to conatin XLink values does not allow any content (gml:ReferenceType).</ctl:comment>
      <ctl:link title="ATC: GetGmlObject request">docs/ats.html#GetGmlObject</ctl:link>
	  <ctl:code>
        <xsl:variable name="GetFeature-rsp">
				<ctl:request>
					<ctl:url>
					  <xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" maxFeatures="20">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:PrimitiveGeoFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f093</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>   
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF1/>
				</ctl:request>
		</xsl:variable>
        <xsl:variable name="feature.id">
          <xsl:value-of select="$GetFeature-rsp//sf:PrimitiveGeoFeature[1]/@gml:id"/>
        </xsl:variable>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetGmlObject.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetGmlObject xmlns:wfs="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" 
    version="1.1.0" service="WFS" handle="GetGmlObject-POST-XML-3"
    traverseXlinkDepth="1">
    <ogc:GmlObjectId xmlns:gml="http://www.opengis.net/gml" gml:id="{$feature.id}" />
</wfs:GetGmlObject>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF1/>
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
  			<xsl:otherwise>
				<xsl:if test="not($response//sf:PrimitiveGeoFeature/gml:name = 'name-f093')">
				  <ctl:message>[FAILURE] Included feature does not match expected query result; gml:name != "name-f093" (where feature id = <xsl:value-of select="sf:PrimitiveGeoFeature/@gml:id"/>)</ctl:message>
				  <ctl:fail />
				</xsl:if>
			</xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetGmlObject-POST-XML-4">
      <ctl:param name="wfs.GetGmlObject.post.url"/>
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:assertion>An exception must be returned in response to any of the following 
        situations: (a) the request is invalid, (b) the locator attribute value (@xlink:href) does 
        not include a fragment identifier, (c) the domain of the URI reference (local or remote) 
        is unsupported, (d) the target resource is not found, (e) a forwarded GetGmlObject 
        request has timed out.</ctl:assertion>
      <ctl:comment>Confirm that an exception is generated with the appropriate code (invalid parameter: -1).</ctl:comment>
      <ctl:link title="ATC: GetGmlObject - Exceptions">docs/ats.html#GetGmlObject-Exceptions</ctl:link>
	  <ctl:code>
        <xsl:variable name="GetFeature-rsp">
				<ctl:request>
					<ctl:url>
					  <xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature" />
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>
        <xsl:variable name="feature.id">
          <xsl:value-of select="$GetFeature-rsp/sf:LinkedFeature[1]/@gml:id"/>
        </xsl:variable>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetGmlObject.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetGmlObject xmlns:wfs="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" 
    version="1.1.0" service="WFS" handle="GetGmlObject-POST-XML-4"
    traverseXlinkDepth="-1">
    <ogc:GmlObjectId xmlns:gml="http://www.opengis.net/gml" gml:id="{$feature.id}" />
</wfs:GetGmlObject>
					</ctl:body>
					<tep:XMLValidatingParser.OWS />
				</ctl:request>
		</xsl:variable>

            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>[FAILURE] Missing response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <ctl:call-test name="ctl:SchematronValidatingParser">
		            <ctl:with-param name="doc" select="$response" />
		            <ctl:with-param name="schema">sch/ows/1.0.0/ExceptionReport.sch</ctl:with-param>
		            <ctl:with-param name="phase">InvalidParameterValuePhase</ctl:with-param>
	            </ctl:call-test>
              </xsl:otherwise>
            </xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetGmlObject-POST-XML-5">
      <ctl:param name="wfs.GetGmlObject.post.url"/>
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:assertion>An exception must be returned in response to any of the following 
        situations: (a) the request is invalid, (b) the locator attribute value (@xlink:href) does 
        not include a fragment identifier, (c) the domain of the URI reference (local or remote) 
        is unsupported, (d) the target resource is not found, (e) a forwarded GetGmlObject 
        request has timed out.</ctl:assertion>
      <ctl:comment>Confirm that an exception is generated with the appropriate code (non-existent/bogus xlink:href).</ctl:comment>
      <ctl:link title="ATC: GetGmlObject - Exceptions">docs/ats.html#GetGmlObject-Exceptions</ctl:link>
	  <ctl:code>
        <xsl:variable name="GetFeature-rsp">
				<ctl:request>
					<ctl:url>
					  <xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" traverseXlinkDepth="0">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f209</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>  
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>
        <xsl:variable name="feature.id">
          <xsl:value-of select="$GetFeature-rsp//sf:LinkedFeature[1]/@gml:id"/>
        </xsl:variable>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetGmlObject.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetGmlObject xmlns:wfs="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" 
    version="1.1.0" service="WFS" handle="GetGmlObject-POST-XML-5"
    traverseXlinkDepth="1">
    <ogc:GmlObjectId xmlns:gml="http://www.opengis.net/gml" gml:id="{$feature.id}" />
</wfs:GetGmlObject>
					</ctl:body>
					<tep:XMLValidatingParser.OWS />
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
			<xsl:otherwise>
			  <ctl:call-test name="ctl:SchematronValidatingParser">
				<ctl:with-param name="doc" select="$response" />
				<ctl:with-param name="schema">sch/ows/1.0.0/ExceptionReport.sch</ctl:with-param>
				<ctl:with-param name="phase">NoApplicableCodePhase</ctl:with-param>
			  </ctl:call-test>
		    </xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

    <ctl:test name="wfs:GetGmlObject-POST-XML-6">
      <ctl:param name="wfs.GetGmlObject.post.url"/>
      <ctl:param name="wfs.GetFeature.post.url"/>
      <ctl:assertion>An exception must be returned in response to any of the following 
        situations: (a) the request is invalid, (b) the locator attribute value (@xlink:href) does 
        not include a fragment identifier, (c) the domain of the URI reference (local or remote) 
        is unsupported, (d) the target resource is not found, (e) a forwarded GetGmlObject 
        request has timed out.</ctl:assertion>
      <ctl:comment>Confirm that an exception is generated with the appropriate code (unsupported XLink domain - FTP).</ctl:comment>
      <ctl:link title="ATC: GetGmlObject - Exceptions">docs/ats.html#GetGmlObject-Exceptions</ctl:link>
	  <ctl:code>
        <xsl:variable name="GetFeature-rsp">
				<ctl:request>
					<ctl:url>
					  <xsl:value-of select="$wfs.GetFeature.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetFeature xmlns:wfs="http://www.opengis.net/wfs" version="1.1.0" service="WFS" traverseXlinkDepth="0">
  <wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
    <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
	  <ogc:PropertyIsEqualTo>
		<ogc:PropertyName xmlns:gml="http://www.opengis.net/gml">gml:name</ogc:PropertyName>
		<ogc:Literal>name-f208</ogc:Literal>
	  </ogc:PropertyIsEqualTo>
	</ogc:Filter>
  </wfs:Query>  
</wfs:GetFeature>
					</ctl:body>
					<tep:XMLValidatingParser.GMLSF2/>
				</ctl:request>
		</xsl:variable>
        <xsl:variable name="feature.id">
          <xsl:value-of select="$GetFeature-rsp//sf:LinkedFeature[1]/@gml:id"/>
        </xsl:variable>
	    <xsl:variable name="response">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$wfs.GetGmlObject.post.url"/>
					</ctl:url>
					<ctl:method>POST</ctl:method>
				    <ctl:body>
<wfs:GetGmlObject xmlns:wfs="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" 
    version="1.1.0" service="WFS" handle="GetGmlObject-POST-XML-6"
    traverseXlinkDepth="1">
    <ogc:GmlObjectId xmlns:gml="http://www.opengis.net/gml" gml:id="{$feature.id}" />
</wfs:GetGmlObject>
					</ctl:body>
					<tep:XMLValidatingParser.OWS />
				</ctl:request>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="not($response/*)">
		        <ctl:message>[FAILURE] Missing or invalid response entity.</ctl:message>
				<ctl:fail/>
			</xsl:when>
			<xsl:otherwise>
			  <ctl:call-test name="ctl:SchematronValidatingParser">
				<ctl:with-param name="doc" select="$response" />
				<ctl:with-param name="schema">sch/ows/1.0.0/ExceptionReport.sch</ctl:with-param>
				<ctl:with-param name="phase">NoApplicableCodePhase</ctl:with-param>
			  </ctl:call-test>
		    </xsl:otherwise>
		</xsl:choose>
	  </ctl:code>
	</ctl:test>

	<ctl:test name="wfs:GetGmlObject-traverseXlinkDepth">
		<ctl:param name="CAPABILITIES" />
		<ctl:assertion>A GetGmlObject request with traverseXlinkDepth = * is resolved correctly.</ctl:assertion>
		<ctl:comment>Following the previous step, If the traverseXlinkDepth attribute value is "*" or greater than the nesting depth, then: ] the XLink linking element start tag shall be written to the new response elemnt without the xlink:href locator attribute or closing tag suffix, followed by a comment containing the locator attribute.</ctl:comment>				
      	<ctl:link>OGC 04-094, 10.2.3, p.52</ctl:link>
		<ctl:code>			
	        <xsl:choose>
	            <xsl:when test="not($CAPABILITIES/wfs:FeatureTypeList/wfs:FeatureType[wfs:Name='sf:LinkedFeature'])">
					<ctl:message>sf:LinkedFeature does not exist</ctl:message>		        	
	            </xsl:when>
	            <xsl:otherwise>
	        			<xsl:variable name="GetFeature-rsp">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$CAPABILITIES/ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:DCP/ows:HTTP/ows:Get/@xlink:href"/>			
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="request">GetFeature</ctl:param>					
							<ctl:param name="service">WFS</ctl:param>
							<ctl:param name="version">1.1.0</ctl:param>
							<param name="typename">
								<xsl:value-of select="wfs:encode($CAPABILITIES/wfs:FeatureTypeList/wfs:FeatureType[wfs:Name='sf:LinkedFeature']/wfs:Name)"/>			
							</param>					
				            <parsers:HTTPParser>
				               <parsers:parse>
				                  <parsers:HTTPParser/>
				               </parsers:parse>
				            </parsers:HTTPParser>
						</ctl:request>
					</xsl:variable>	
	            
					<xsl:variable name="FEATUREID">
		          		<xsl:value-of select="$GetFeature-rsp//gml:featureMembers//@gml:id"/>
		        	</xsl:variable>
					<xsl:variable name="RESPONSE">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$CAPABILITIES/ows:OperationsMetadata/ows:Operation[@name='GetGmlObject']/ows:DCP/ows:HTTP/ows:Get/@xlink:href"/>			
							</ctl:url>
							<ctl:method>POST</ctl:method>
						    <ctl:body>
							<wfs:GetGmlObject xmlns:wfs="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" 
							    version="1.1.0" service="WFS"
							    traverseXlinkDepth="*">
							    <ogc:GmlObjectId xmlns:gml="http://www.opengis.net/gml" gml:id="{$FEATUREID}" />
							</wfs:GetGmlObject>
							</ctl:body>
				            <parsers:HTTPParser>
				               <parsers:parse>
				                  <parsers:HTTPParser/>
				               </parsers:parse>
				            </parsers:HTTPParser>
						</ctl:request>
					</xsl:variable>	
					<xsl:if test="$RESPONSE//@xlink:href">
						<ctl:fail/>
					</xsl:if>
	            </xsl:otherwise>
	         </xsl:choose>			
		</ctl:code>
	</ctl:test>

	
</ctl:package>
