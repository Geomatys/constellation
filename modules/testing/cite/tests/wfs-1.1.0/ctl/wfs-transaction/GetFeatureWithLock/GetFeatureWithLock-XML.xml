<?xml version="1.0" encoding="UTF-8"?>
<ctl:package xmlns="http://www.occamlab.com/ctl"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:p="http://teamengine.sourceforge.net/parsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:wfs="http://www.opengis.net/wfs"
 xmlns:ows="http://www.opengis.net/ows"
 xmlns:ogc="http://www.opengis.net/ogc"
 xmlns:gml="http://www.opengis.net/gml"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:sf="http://cite.opengeospatial.org/gmlsf">

   <ctl:test name="wfs:run-GetFeatureWithLock-POST">
    <ctl:param name="wfs.GetCapabilities.document" />
    <ctl:param name="supports.atomic.trx" />
    <ctl:assertion>Run test group for GetFeatureWithLock requests using the POST method</ctl:assertion>
    <ctl:code>
    
		<ctl:call-test name="wfs:GetFeatureWithLock-Xlink">
			<ctl:with-param name="CAPABILITIES" select="$wfs.GetCapabilities.document" />
		</ctl:call-test>
    
      <xsl:variable name="wfs.GetFeatureWithLock.post.url">
        <xsl:value-of select="$wfs.GetCapabilities.document//ows:OperationsMetadata/ows:Operation[@name='GetFeatureWithLock']/ows:DCP/ows:HTTP/ows:Post/@xlink:href"/>
	  </xsl:variable>
      <xsl:variable name="wfs.Transaction.post.url">
        <xsl:value-of select="$wfs.GetCapabilities.document//ows:OperationsMetadata/ows:Operation[@name='Transaction']/ows:DCP/ows:HTTP/ows:Post/@xlink:href"/>
	  </xsl:variable>
      <xsl:variable name="wfs.GetFeature.get.url">
        <xsl:value-of select="$wfs.GetCapabilities.document//ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:DCP/ows:HTTP/ows:Get/@xlink:href"/>
	  </xsl:variable>
      <xsl:variable name="wfs.GetFeature.post.url">
        <xsl:value-of select="$wfs.GetCapabilities.document//ows:OperationsMetadata/ows:Operation[@name='GetFeature']/ows:DCP/ows:HTTP/ows:Post/@xlink:href"/>
	  </xsl:variable>
      <ctl:message>Target endpoint is <xsl:value-of select="$wfs.GetFeatureWithLock.post.url"/></ctl:message>

  <ctl:call-test name="wfs:wfs-1.1.0-GetFeatureWithLock-tc1.1">
    <ctl:with-param name="wfs.GetFeatureWithLock.post.url" select="$wfs.GetFeatureWithLock.post.url"/>
    <ctl:with-param name="wfs.Transaction.post.url" select="$wfs.Transaction.post.url"/>
    <ctl:with-param name="wfs.GetFeature.get.url" select="$wfs.GetFeature.get.url"/>
    <ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
    <ctl:with-param name="supports.atomic.trx" select="$supports.atomic.trx"/>
  </ctl:call-test>
  <ctl:call-test name="wfs:wfs-1.1.0-GetFeatureWithLock-tc2.1">
    <ctl:with-param name="wfs.GetFeatureWithLock.post.url" select="$wfs.GetFeatureWithLock.post.url"/>
  </ctl:call-test>

      </ctl:code>
    </ctl:test>

    <test name="wfs:wfs-1.1.0-GetFeatureWithLock-tc1.1">
      <param name="wfs.GetFeatureWithLock.post.url"/>
      <param name="wfs.Transaction.post.url"/>
      <param name="wfs.GetFeature.get.url"/>
      <param name="wfs.GetFeature.post.url"/>
      <ctl:param name="supports.atomic.trx" />
      <assertion>
      The response to a LockFeature request that specifies lockAction="ALL" must
      include a response that identifies all locked features. If any candidate
      features cannot be locked, then no feature shall be locked and an exception
      report is returned.
      </assertion>
      <comment>Pass if all validation steps pass. The following requests are submitted to the IUT:
      0. Insert sf:PrimitiveGeoFeature instance
      1. GetFeatureWithLock (all sf:PrimitiveGeoFeature instances)
      2. Delete without LockId - should fail
      3. Delete with LockId and release all locks - should succeed
      </comment>
      <link>wfs-1.1.0-GetFeatureWithLock-atc1</link>
		<code>
             <xsl:variable name="response0">
				<request>
					<url>
						<xsl:value-of select="$wfs.Transaction.post.url"/>
					</url>
                    <method>POST</method>
					<body>
                      <xi:include href="./wfs-1.1.0-GetFeatureWithLock-tc1.1.0.body.xml"/>
					</body>
					<p:XMLValidatingParser.GMLSF1/>
				</request>
			</xsl:variable>
			<xsl:variable name="response">
				<request>
					<url>
						<xsl:value-of select="$wfs.GetFeatureWithLock.post.url"/>
					</url>
                    <method>POST</method>
					<body>
                      <xi:include href="./wfs-1.1.0-GetFeatureWithLock-tc1.1.1.body.xml"/>
					</body>
					<p:XMLValidatingParser.GMLSF1/>
				</request>
			</xsl:variable>

            <xsl:choose>
              <xsl:when test="not($response0/* or $response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="LockId">
                  <xsl:value-of select="$response//wfs:FeatureCollection/@lockId"/>
                </xsl:variable>
                <xsl:variable name="totalLocked"
                  select="count($response//gml:featureMember) + count($response//gml:featureMembers/*)" />
                <xsl:if test="$totalLocked lt 5">
                  <ctl:message>FAILURE: Expected 5 or more sf:PrimitiveGeoFeature instances to be locked (reported <xsl:value-of select="$totalLocked"/>)</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <!-- Submit delete request WITHOUT LockId -->
                <xsl:variable name="response2">
				  <request>
					<url>
						<xsl:value-of select="$wfs.Transaction.post.url"/>
					</url>
                    <method>POST</method>
					<body>
                       <xi:include href="./wfs-1.1.0-GetFeatureWithLock-tc1.1.2.body.xml"/>
					</body>
                    <p:XMLValidatingParser.GMLSF1/>
				  </request>
			    </xsl:variable>
			    <xsl:choose>
					<xsl:when test="$supports.atomic.trx">
						<ctl:call-test name="ctl:SchematronValidatingParser">
							<ctl:with-param name="doc" select="$response2" />
							<ctl:with-param name="schema">sch/ows/1.0.0/ExceptionReport.sch</ctl:with-param>
							<ctl:with-param name="phase">MissingParameterValuePhase</ctl:with-param>
						</ctl:call-test>
					</xsl:when>
					<xsl:otherwise>
						<xsl:variable name="totalDeleted"><xsl:value-of select="$response2//wfs:totalDeleted"/></xsl:variable>
						<xsl:if test="$totalDeleted != 0">
						  <ctl:message>FAILURE: Expected totalDeleted = 0 (reported total is <xsl:value-of select="$totalDeleted"/>)</ctl:message>
						  <ctl:fail/>
						</xsl:if>
						<xsl:if test="$response2//wfs:TransactionResults/wfs:Action/@locator != 'del-1'">
						  <ctl:message>FAILURE: Expected wfs:Action/@locator = 'del-1'</ctl:message>
						  <ctl:fail/>
						</xsl:if>											
					</xsl:otherwise>
			    </xsl:choose>                
                <ctl:call-test name="wfs:GetFeatureByName">
                  <ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
                  <ctl:with-param name="type" select="'sf:PrimitiveGeoFeature'"/>
                  <ctl:with-param name="name.value" select="'cite.gmlsf0-f503'" />
                  <ctl:with-param name="empty.response" select="'false'" />
                </ctl:call-test>
                <!-- Submit delete request WITH LockId and release ALL locks -->
                <xsl:variable name="response3">
				  <request>
					<url>
						<xsl:value-of select="$wfs.Transaction.post.url"/>
					</url>
                    <method>POST</method>
					<body>
                       <xi:include href="./wfs-1.1.0-GetFeatureWithLock-tc1.1.3.body.xml"/>
					</body>
                    <p:XMLValidatingParser.GMLSF1/>
				  </request>
			    </xsl:variable>
                <xsl:variable name="totalDeleted"><xsl:value-of select="$response3//wfs:totalDeleted"/></xsl:variable>
                <xsl:if test="$totalDeleted != 1">
                  <ctl:message>FAILURE: Expected totalDeleted = 1 (reported total is <xsl:value-of select="$totalDeleted"/>)</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <ctl:call-test name="wfs:GetFeatureByName">
                  <ctl:with-param name="wfs.GetFeature.post.url" select="$wfs.GetFeature.post.url"/>
                  <ctl:with-param name="type" select="'sf:PrimitiveGeoFeature'"/>
                  <ctl:with-param name="name.value" select="'cite.gmlsf0-f503'" />
                  <ctl:with-param name="empty.response" select="'true'" />
                </ctl:call-test>
              </xsl:otherwise>
            </xsl:choose>
		</code>
	</test>

    <test name="wfs:wfs-1.1.0-GetFeatureWithLock-tc2.1">
      <param name="wfs.GetFeatureWithLock.post.url"/>
      <assertion>
      If locks on all matching features cannot be acquired, the response to a
      GetFeatureWithLock request must include an exception report.
      </assertion>
      <comment>Pass if all validation steps pass. The following requests are submitted to the IUT:
      1. LockFeature (all sf:AggregateGeoFeature instances) - should succeed
      2. LockFeature (sf:AggregateGeoFeature by BBOX) - should fail with exception report
      </comment>
      <link>OGC 04-094: 9.3 (p.39)</link>
		<code>
			<xsl:variable name="response">
				<request>
					<url>
						<xsl:value-of select="$wfs.GetFeatureWithLock.post.url"/>
					</url>
                    <method>POST</method>
					<body>
                      <xi:include href="./wfs-1.1.0-GetFeatureWithLock-tc2.1.1.body.xml"/>
					</body>
					<p:XMLValidatingParser.GMLSF1/>
				</request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <!-- Submit intersecting GetFeatureWithLock request  -->
                <xsl:variable name="response2">
				  <request>
					<url>
						<xsl:value-of select="$wfs.GetFeatureWithLock.post.url"/>
					</url>
                    <method>POST</method>
					<body>
                      <xi:include href="./wfs-1.1.0-GetFeatureWithLock-tc2.1.2.body.xml"/>
					</body>
                    <p:XMLValidatingParser.OWS />
				  </request>
			    </xsl:variable>
                <ctl:call-test name="ctl:SchematronValidatingParser">
		            <ctl:with-param name="doc" select="$response2" />
		            <ctl:with-param name="schema">sch/ows/1.0.0/ExceptionReport.sch</ctl:with-param>
		            <ctl:with-param name="phase">DefaultPhase</ctl:with-param>
	            </ctl:call-test>
              </xsl:otherwise>
            </xsl:choose>
		</code>
	</test>
	
	<ctl:test name="wfs:GetFeatureWithLock-Xlink">
		<ctl:param name="CAPABILITIES" />
		<ctl:assertion>Execute WFS transaction with XlinkPropertyName and test for exception.</ctl:assertion>
		<ctl:comment></ctl:comment>				
      	<ctl:link>OGC 04-094, 9.2, p.38</ctl:link>
		<ctl:code>
			<xsl:choose>
	            <xsl:when test="not($CAPABILITIES/wfs:FeatureTypeList/wfs:FeatureType[wfs:Name='sf:LinkedFeature'])">
					<ctl:message>sf:LinkedFeature does not exist</ctl:message>		        	
	            </xsl:when>
	            <xsl:otherwise>
					<xsl:variable name="RESPONSE">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$CAPABILITIES/ows:OperationsMetadata/ows:Operation[@name='GetFeatureWithLock']/ows:DCP/ows:HTTP/ows:Post/@xlink:href"/>			
							</ctl:url>
		                    <method>POST</method>
							<body>					
							<wfs:GetFeatureWithLock service="WFS" version="1.1.0" 
							  expiry="1"
							  xmlns:wfs="http://www.opengis.net/wfs" 
							  xmlns:gml="http://www.opengis.net/gml">					  
							<wfs:Query xmlns:sf="http://cite.opengeospatial.org/gmlsf" typeName="sf:LinkedFeature">
								<wfs:XlinkPropertyName traverseXlinkDepth="1">sf:extent</wfs:XlinkPropertyName>
								<ogc:Filter xmlns:ogc="http://www.opengis.net/ogc">
									<ogc:GmlObjectId gml:id="g202"/>
								</ogc:Filter>
							</wfs:Query>
							</wfs:GetFeatureWithLock>
							</body>
				            <parsers:HTTPParser>
				               <parsers:parse>
				                  <parsers:HTTPParser/>
				               </parsers:parse>
				            </parsers:HTTPParser>
						</ctl:request>
					</xsl:variable>	

					<xsl:if test="not($RESPONSE//ows:Exception/*)">
						<ctl:fail/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	
</ctl:package>
