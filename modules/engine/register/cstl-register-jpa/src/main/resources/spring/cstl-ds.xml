<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- ========================= DATASOURCE DEFINITION ========================= -->

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    
  
    <!-- DataSource configuration for the tomcat jdbc connection pool
    See here for more details on commons-dbcp versus tomcat-jdbc:
    http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/-->


<!--     <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" -->
<!--           p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}" -->
<!--           p:username="${jdbc.username}" p:password="${jdbc.password}"/> -->

    <bean id="dataSource" class="org.constellation.admin.EmbeddedDatabase" factory-method="getOrCreateDataSource"></bean>

    <!-- Database initializer. If any of the script fails, the initialization stops. -->
    <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
<!--     <jdbc:initialize-database  data-source="dataSource" enabled="${initDB}"> -->
<!--         <jdbc:script location="${jdbc.initLocation}"/> -->
<!--         <jdbc:script location="${jdbc.dataLocation}"/> -->
<!--     </jdbc:initialize-database> -->

    
</beans>

