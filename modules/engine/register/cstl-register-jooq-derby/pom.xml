<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.constellation.engine</groupId>
		<artifactId>register</artifactId>
		<version>0.9-SNAPSHOT</version>
	</parent>
	<groupId>org.constellation.engine.register</groupId>
	<artifactId>cstl-register-jooq-derby</artifactId>



	<properties>
		<jooq.version>3.5.3</jooq.version>
	</properties>



	<dependencies>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.apache.sis.core</groupId>
			<artifactId>sis-utility</artifactId>
		</dependency>
		<dependency>
			<groupId>org.constellation.xml-bindings</groupId>
			<artifactId>cstl-xml-configuration</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>


		<dependency>
			<groupId>org.constellation.engine</groupId>
			<artifactId>derby-store</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
			<version>${jooq.version}</version>
		</dependency>




		<!-- Logging -->

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
		</dependency>

		<!-- Spring (transitive dependencies are not listed explicitly) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

	</dependencies>



	<build>

		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3</version>
				<dependencies>

				</dependencies>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
					<arguments>
						<argument>-classpath</argument>
						<classpath />
						<argument>org.constellation.admin.util.LiquidDatabase</argument>
						<argument>${basedir}/target/builddb</argument>
						<argument>cstl/db/db-changelog.xml</argument>
					</arguments>
				</configuration>
			</plugin>

			<plugin>

				<!-- Specify the maven code generator plugin -->
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>

				<!-- The plugin should hook into the generate goal -->
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Manage the plugin's dependency. In this example, we'll use a PostgreSQL 
					database -->
				<dependencies>
					<dependency>
						<groupId>org.apache.derby</groupId>
						<artifactId>derby</artifactId>
						<version>10.10.1.1</version>
					</dependency>
				</dependencies>

				<!-- Specify the plugin configuration. The configuration format is the 
					same as for the standalone code generator -->
				<configuration>

					<!-- JDBC connection parameters -->
					<jdbc>
						<driver>org.apache.derby.jdbc.EmbeddedDriver</driver>
						<url>jdbc:derby:${basedir}/target/builddb</url>
						<user>geoadmin</user>
						<password>g3o4dmin</password>
					</jdbc>


					<!-- Generator parameters -->
					<generator>
						<name>org.jooq.util.DefaultGenerator</name>
						<database>
							<name>org.jooq.util.derby.DerbyDatabase</name>
							<includes>.*</includes>
							<excludes></excludes>
							<inputSchema>ADMIN</inputSchema>
						</database>
						<generate>
							<relations>true</relations>
							<records>true</records>
							<!-- Warning: jOOQ's generated DAOs have final methods which can not 
								be extended by proxy classes. It is recommended to inject components extending 
								jOOQ's generated DAOs using interfaces (contracts) rather that implementation 
								classes. -->
							<daos>true</daos>
							<fluentSetters>true</fluentSetters>
							<validationAnnotations>true</validationAnnotations>
						</generate>
						<target>
							<packageName>org.constellation.engine.register.jooq</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>com.geomatys.maven</groupId> <artifactId>geomatys-jooqhelper-plugin</artifactId> 
				<version>1.0.0-SNAPSHOT</version> <executions> <execution> <id>jooq-helper</id> 
				<phase>generate-resources</phase> <goals> <goal>generate</goal> </goals> 
				<configuration> <basePackage>org.constellation.engine.register</basePackage> 
				<targetPackage>org.constellation.engine.register.helper</targetPackage> </configuration> 
				</execution> </executions> </plugin> -->
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jooq</groupId>
										<artifactId>jooq-codegen-maven</artifactId>
										<versionRange>[3.3.2,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.3,)</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>



</project>