<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">


  <global-method-security   secured-annotations="enabled" jsr250-annotations="enabled" />

  <beans:alias name="springSecurityFilterChain" alias="securityFilter" />

  <beans:bean id="nop" class="org.constellation.security.spring.NOPAuthenticationEntryPoint" />

  <http pattern="/WS/**" request-matcher="ant" use-expressions="true" auto-config="false" entry-point-ref="nop">
    <intercept-url pattern="/WS/configuration/**" access="hasRole('cstl-admin')" />
    <intercept-url pattern="/WS/*/admin/**" access="hasRole('cstl-admin')" />
  </http>
  <http pattern="/api/**" request-matcher="ant" use-expressions="true" auto-config="false" entry-point-ref="nop">
    <intercept-url pattern="/api/**" access="isAuthenticated()" />
  </http>
  <http pattern="/spring/admin/**" request-matcher="ant" use-expressions="true" auto-config="false" entry-point-ref="nop">
    <intercept-url pattern="/spring/admin/**" access="hasRole('cstl-admin')" />
    <session-management session-authentication-strategy-ref="sessionAuthenticationStrategy" />
  </http>

  <http request-matcher="ant" use-expressions="true">
    <intercept-url pattern="/sql.jsp" access="hasRole('cstl-admin')" />
    <form-login  default-target-url="/spring/auth/loggedin" always-use-default-target="true" login-page="/login.html" authentication-failure-url="/login.html?failed"/>
    <logout invalidate-session="true" delete-cookies="JSESSIONID" logout-url="/logout" logout-success-url="/spring/auth/loggedout" />
    <session-management session-authentication-strategy-ref="sessionAuthenticationStrategy" />
  </http>

  <beans:bean id="sessionAuthenticationStrategy"
    class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
    <beans:constructor-arg>
      <beans:list>
<!--         <beans:bean -->
<!--           class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy"> -->
<!--           <beans:constructor-arg ref="sessionRegistry" /> -->
<!--           <beans:property name="maximumSessions" value="-1" /> -->
<!--           <beans:property name="exceptionIfMaximumExceeded" value="true" /> -->
<!--         </beans:bean> -->
        <beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
        </beans:bean>
        <beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
          <beans:constructor-arg ref="sessionRegistry" />
        </beans:bean>
      </beans:list>
    </beans:constructor-arg>
  </beans:bean>

  <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

  
  <authentication-manager alias="authenticationManager">
    <authentication-provider user-service-ref="cstlUserService">
      <password-encoder hash="md5" />
    </authentication-provider>
  </authentication-manager>

<!--   <beans:bean id="myAuthFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"> -->
<!--     <beans:property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy" /> -->
<!--     <beans:property name="authenticationManager" ref="authenticationManager" /> -->
<!--     <beans:property name=""></beans:property> -->
<!--   </beans:bean> -->
</beans:beans>