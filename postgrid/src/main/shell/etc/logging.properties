#
# Configuration du journal. Pour voir la configuration par défaut
# avec quelques explications, voyez "jre/lib/logging.properties"
# dans le répertoire d'installation du Java.
#


# Les périphérique de sorties. Nous écrirons dans un fichier et vers la console.
# Notez que la console utilisera le périphérique d'erreur standard, de façon à
# éviter de "polluer" la sortie standard avec les messages du journal.

handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler


# Filtre les évenements du journal (SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST).
# Pour PostGrid, on conseille un niveau CONFIG ou plus fin car les informations propres
# à la configuration (connexion à la base de données, etc.) sont souvent utiles pour
# identifier des problèmes.

fr.ifremer.level   = CONFIG
net.sicade.level   = CONFIG
org.geotools.level = CONFIG


# Pour la console, on limitera les évenements à un niveau moins fin pour éviter
# de surcharger la sortie. Si on souhaite lire des informations de niveau plus
# fin, il faudra aller voir dans les fichiers du répertoire ../log/.

java.util.logging.ConsoleHandler.level = INFO


# Configuration de la sortie. Dans "FileHandler.pattern", remplacez le chemin
# devant "gt-%u.xml" par un répertoire existant sur votre système.

java.util.logging.FileHandler.pattern      = /home/geoadmin/geotools/log/gt-%u.xml
java.util.logging.ConsoleHandler.formatter = org.geotools.util.MonolineFormatter
org.geotools.util.MonolineFormatter.time   = H:mm:ss
org.geotools.util.MonolineFormatter.source = class:short
