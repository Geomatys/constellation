/*
 * Sicade - Systèmes intégrés de connaissances pour l'aide à la décision en environnement
 * (C) 2005, Institut de Recherche pour le Développement
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 2.1 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

// Guard against multiple includes
#ifndef _net_sicade_openoffice_XNumeric_
#define _net_sicade_openoffice_XNumeric_

// Must be included always for compatibility reasons
#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/sheet/AddIn.idl>


module net {
  module sicade {
    module openoffice {
      /// Methods from the net.sicade.observation package to make available to OpenOffice.
      interface XNumeric : com::sun::star::uno::XInterface {
        /// Find the index where a values is found.
        sequence< sequence< double > > getLocatedIndex(
             [in] com::sun::star::beans::XPropertySet xOptions,
             /// The x (first column) and y (all remaining columns) values.
             [in] sequence< sequence< double > > data,
             /// The x value to find.
             [in] double xi
        );

        /// Interpolate to the specified values.
        sequence< sequence< double > > getInterpolated(
             [in] com::sun::star::beans::XPropertySet xOptions,
             /// The x (first column) and y (all remaining columns) values.
             [in] sequence< sequence< double > > data,
             /// The x values where to interpolate.
             [in] sequence< sequence< double > > xi,
             /// The interpolation type.
             [in] any interpolation,
             /// Whatever to skip NaN values in y columns.
             [in] any skipMissingY
        );
      };

      /*
       * Exported interfaces:
       * This is where we put all interfaces that this service exports.
       */
      service Numeric {
        interface XNumeric;

        /*
         * Necessary base service.
         * All add-ins must implement this service
         */
        service com::sun::star::sheet::AddIn;
      };
    };
  };
};

#endif
